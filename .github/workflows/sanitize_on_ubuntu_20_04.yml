name: Sanitize

on:
  pull_request:
    branches:
      - master
  push:
    branches:
      - master

jobs:
  sanitize_clang:
    name: clang
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install software-properties-common
        run: sudo apt-get install software-properties-common
      - name: Install clang compiler, meson and ninja
        run: sudo apt-get -y install clang libc++-10-dev ccache libtool pkg-config cmake ninja-build
      - name: Install libosmscout dependencies
        run: "sudo apt-get update && sudo apt-get install -y
              libxml2-dev
              libprotobuf-dev protobuf-compiler
              libmarisa-dev"
      - name: Configure build project
        run: "cmake -B build
              -DCMAKE_BUILD_TYPE=Debug
              -DOSMSCOUT_BUILD_DOC_API=OFF
              -DOSMSCOUT_BUILD_WEBPAGE=OFF
              -DOSMSCOUT_BUILD_TOOL_OSMSCOUT2=OFF
              -DOSMSCOUT_BUILD_TOOL_OSMSCOUTOPENGL=OFF
              -DOSMSCOUT_BUILD_DEMOS=OFF
              -DOSMSCOUT_BUILD_TOOL_STYLEEDITOR=OFF
              -DOSMSCOUT_BUILD_BINDING_JAVA=OFF
              -DOSMSCOUT_DEBUG_LABEL_LAYOUTER=ON
              -DOSMSCOUT_DEBUG_GROUNDTILES=ON
              -DOSMSCOUT_DEBUG_COASTLINE=ON
              -DOSMSCOUT_DEBUG_TILING=ON
              -DOSMSCOUT_DEBUG_ROUTING=ON -DCMAKE_CXX_FLAGS=\"-fsanitize=address -fsanitize=undefined\"
              -DCMAKE_EXE_LINKER_FLAGS=\"-fsanitize=address -fsanitize=undefined\"
              -DCMAKE_UNITY_BUILD=ON -Wno-dev -G \"Ninja\""
        env:
          CXX: clang++
          CC: clang
      - name: Build project
        run: cmake --build build
      - name: Run tests
        run: ctest -j 2 --output-on-failure
        working-directory: build

  sanitize_gcc:
    name: gcc
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install software-properties-common
        run:  sudo apt-get install software-properties-common
      - name: Install gcc compiler, cmake and ninja
        run:  sudo apt-get -y install gcc-10 g++-10 libtbb-dev ccache libtool pkg-config cmake ninja-build
      - name: Install libosmscout dependencies
        run:  "sudo apt-get update && sudo apt-get install -y
               libxml2-dev
               libprotobuf-dev protobuf-compiler
               libmarisa-dev"
      - name: Configure build project
        run: "cmake -B build
              -DCMAKE_BUILD_TYPE=Debug
              -DOSMSCOUT_BUILD_DOC_API=OFF
              -DOSMSCOUT_BUILD_WEBPAGE=OFF
              -DOSMSCOUT_BUILD_TOOL_OSMSCOUT2=OFF
              -DOSMSCOUT_BUILD_TOOL_OSMSCOUTOPENGL=OFF
              -DOSMSCOUT_BUILD_DEMOS=OFF
              -DOSMSCOUT_BUILD_TOOL_STYLEEDITOR=OFF
              -DOSMSCOUT_BUILD_BINDING_JAVA=OFF
              -DOSMSCOUT_DEBUG_LABEL_LAYOUTER=ON
              -DOSMSCOUT_DEBUG_GROUNDTILES=ON
              -DOSMSCOUT_DEBUG_COASTLINE=ON
              -DOSMSCOUT_DEBUG_TILING=ON
              -DOSMSCOUT_DEBUG_ROUTING=ON -DCMAKE_CXX_FLAGS=\"-fsanitize=address -fsanitize=undefined\"
              -DCMAKE_EXE_LINKER_FLAGS=\"-fsanitize=address -fsanitize=undefined\"
              -DCMAKE_UNITY_BUILD=ON -Wno-dev -G \"Ninja\""
        env:
          CXX: g++-10
          CC: gcc-10
      - name: Build project
        run: cmake --build build
      - name: Run tests
        run: ctest -j 2 --output-on-failure
        working-directory: build
