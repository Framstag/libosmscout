#---- DumpOSS
if(${OSMSCOUT_BUILD_MAP})
	add_executable(DumpOSS src/DumpOSS.cpp)
	set_property(TARGET DumpOSS PROPERTY CXX_STANDARD 11)
	target_include_directories(DumpOSS PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map/include)
	target_link_libraries(DumpOSS osmscout osmscout_map)
	install(TARGETS DumpOSS RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
else()
	message("Skip DumpOSS demo libosmscout-map, is missing.")
endif()

#---- LocationDescription
add_executable(LocationDescription src/LocationDescription.cpp)
set_property(TARGET LocationDescription PROPERTY CXX_STANDARD 11)
target_include_directories(LocationDescription PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include)
target_link_libraries(LocationDescription osmscout)
install(TARGETS LocationDescription RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)

#---- LocationLookup
add_executable(LocationLookup src/LocationLookup.cpp)
set_property(TARGET LocationLookup PROPERTY CXX_STANDARD 11)
target_include_directories(LocationLookup PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include)
target_link_libraries(LocationLookup osmscout)
install(TARGETS LocationLookup RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)

#---- LookupPOI
add_executable(LookupPOI src/LookupPOI.cpp)
set_property(TARGET LookupPOI PROPERTY CXX_STANDARD 11)
target_include_directories(LookupPOI PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include)
target_link_libraries(LookupPOI osmscout)
install(TARGETS LookupPOI RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)

#---- LookupText
if(MARISA_FOUND)
    add_executable(LookupText src/LookupText.cpp)
    set_property(TARGET LookupText PROPERTY CXX_STANDARD 11)
    target_include_directories(LookupText PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include ${MARISA_INCLUDE_DIRS})
    target_link_libraries(LookupText osmscout)
    install(TARGETS LookupText RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
else()
	message("Skip LookupText demo, marisa dependency is missing.")
endif()

#---- PerformanceTest
if(${OSMSCOUT_BUILD_MAP})
	configure_file(${CMAKE_CURRENT_SOURCE_DIR}/src/PerformanceTestConfig.h.cmake ${CMAKE_CURRENT_BINARY_DIR}/include/PerformanceTest/config.h)
	add_executable(PerformanceTest src/PerformanceTest.cpp)
	set_property(TARGET PerformanceTest PROPERTY CXX_STANDARD 11)
	target_include_directories(PerformanceTest PRIVATE ${CMAKE_CURRENT_BINARY_DIR}/include/PerformanceTest ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map/include)
	target_link_libraries(PerformanceTest osmscout osmscout_map)
	if(${OSMSCOUT_BUILD_MAP_CAIRO})
		target_include_directories(PerformanceTest PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map-cairo/include ${CAIRO_INCLUDE_DIRS} ${PNG_INCLUDE_DIRS})
		if(PANGOCAIRO_FOUND)
			target_include_directories(PerformanceTest PRIVATE ${PANGO_INCLUDE_DIRS})
		endif()
		target_link_libraries(PerformanceTest osmscout_map_cairo)
	endif()
	if(${OSMSCOUT_BUILD_MAP_QT})
		target_include_directories(PerformanceTest PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map-qt/include ${Qt5Gui_INCLUDE_DIRS} ${Qt5Gui_INCLUDE_DIRS} ${Qt5Widgets_INCLUDE_DIRS})
		target_link_libraries(PerformanceTest osmscout_map_qt ${Qt5Widgets_LIBRARIES})
	endif()
  if(${GPERFTOOLS_USAGE})
    target_include_directories(PerformanceTest PRIVATE ${GPERFTOOLS_INCLUDE_DIRS})
    target_link_libraries(PerformanceTest ${GPERFTOOLS_LIBRARIES})
  endif()
	install(TARGETS PerformanceTest RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
else()
	message("Skip PerformanceTest demo, libosmscout-map is missing.")
endif()

#---- ResourceConsumption
if(${OSMSCOUT_BUILD_MAP})
	add_executable(ResourceConsumption src/ResourceConsumption.cpp)
	set_property(TARGET ResourceConsumption PROPERTY CXX_STANDARD 11)
	target_include_directories(ResourceConsumption PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map/include)
	target_link_libraries(ResourceConsumption osmscout osmscout_map)
	install(TARGETS ResourceConsumption RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
else()
	message("Skip ResourceConsumption demo, libosmscout-map is missing.")
endif()

#---- ReverseLocationLookup
add_executable(ReverseLocationLookup src/ReverseLocationLookup.cpp)
set_property(TARGET ReverseLocationLookup PROPERTY CXX_STANDARD 11)
target_include_directories(ReverseLocationLookup PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include)
target_link_libraries(ReverseLocationLookup osmscout)
install(TARGETS ReverseLocationLookup RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)

#---- Routing
add_executable(Routing src/Routing.cpp)
set_property(TARGET Routing PROPERTY CXX_STANDARD 11)
target_include_directories(Routing PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include)
target_link_libraries(Routing osmscout)
install(TARGETS Routing RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)

#----
if(${OSMSCOUT_BUILD_MAP_AGG})
    add_executable(Tiler src/Tiler.cpp)
    set_property(TARGET Tiler PROPERTY CXX_STANDARD 11)
    target_include_directories(Tiler PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map-agg/include ${LIBAGG_INCLUDE_DIRS} ${FREETYPE_INCLUDE_DIRS})
    target_link_libraries(Tiler osmscout osmscout_map osmscout_map_agg)
    if(LIBAGGFT2_FOUND)
        target_link_libraries(Tiler ${LIBAGGFT2_LIBRARIES})
    endif()
    install(TARGETS Tiler RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)

    add_executable(DrawMapAgg src/DrawMapAgg.cpp)
    set_property(TARGET DrawMapAgg PROPERTY CXX_STANDARD 11)
    target_include_directories(DrawMapAgg PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map-agg/include ${LIBAGG_INCLUDE_DIRS} ${FREETYPE_INCLUDE_DIRS})
    target_link_libraries(DrawMapAgg osmscout osmscout_map osmscout_map_agg)
    if(LIBAGGFT2_FOUND)
        target_link_libraries(DrawMapAgg ${LIBAGGFT2_LIBRARIES})
    endif()
    install(TARGETS DrawMapAgg RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
else()
	message("Skip Tiler and DrawMapAgg demos, libosmscout-map-agg is missing.")
endif()

if(${OSMSCOUT_BUILD_MAP_CAIRO})
    add_executable(DrawMapCairo src/DrawMapCairo.cpp)
    set_property(TARGET DrawMapCairo PROPERTY CXX_STANDARD 11)
    target_include_directories(DrawMapCairo PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map-cairo/include ${CAIRO_INCLUDE_DIRS} ${PNG_INCLUDE_DIRS})
    if(PANGOCAIRO_FOUND)
        target_include_directories(DrawMapCairo PRIVATE ${PANGO_INCLUDE_DIRS})
    endif()
    target_link_libraries(DrawMapCairo osmscout osmscout_map osmscout_map_cairo)
    install(TARGETS DrawMapCairo RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
else()
	message("Skip DrawMapCairo demo, libosmscout-map-cairo is missing.")
endif()

if(${OSMSCOUT_BUILD_MAP_QT})
    add_executable(DrawMapQt src/DrawMapQt.cpp)
    set_property(TARGET DrawMapQt PROPERTY CXX_STANDARD 11)
    target_include_directories(DrawMapQt PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map-qt/include ${Qt5Gui_INCLUDE_DIRS} ${Qt5Widgets_INCLUDE_DIRS})
    target_link_libraries(DrawMapQt osmscout osmscout_map osmscout_map_qt ${Qt5Widgets_LIBRARIES})
    install(TARGETS DrawMapQt RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
    target_compile_definitions(DrawMapQt PRIVATE ${Qt5Widgets_DEFINITIONS})

    add_executable(ResourceConsumptionQt src/ResourceConsumptionQt.cpp)
    set_property(TARGET ResourceConsumptionQt PROPERTY CXX_STANDARD 11)
    target_include_directories(ResourceConsumptionQt PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map-qt/include ${Qt5Gui_INCLUDE_DIRS} ${Qt5Widgets_INCLUDE_DIRS})
    target_link_libraries(ResourceConsumptionQt osmscout osmscout_map osmscout_map_qt ${Qt5Widgets_LIBRARIES})
    install(TARGETS ResourceConsumptionQt RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
    target_compile_definitions(ResourceConsumptionQt PRIVATE ${Qt5Widgets_DEFINITIONS})
else()
	message("Skip ResourceConsumptionQt and DrawMapQt demos, libosmscout-map-qt is missing.")
endif()

if(${OSMSCOUT_BUILD_MAP_SVG})
	add_executable(DrawMapSVG src/DrawMapSVG.cpp)
	set_property(TARGET DrawMapSVG PROPERTY CXX_STANDARD 11)
	target_include_directories(DrawMapSVG PRIVATE ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map/include ${OSMSCOUT_BASE_DIR_SOURCE}/libosmscout-map-svg/include)
	if(PANGOFT2_FOUND)
	  target_include_directories(DrawMapSVG PRIVATE ${PANGO_INCLUDE_DIRS})
	endif()
	target_link_libraries(DrawMapSVG osmscout osmscout_map osmscout_map_svg)
	install(TARGETS DrawMapSVG RUNTIME DESTINATION bin LIBRARY DESTINATION lib ARCHIVE DESTINATION lib)
else()
	message("Skip DrawMapSVG demo, libosmscout-map-svg is missing.")
endif()
