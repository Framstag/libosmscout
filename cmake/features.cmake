include(CheckCXXSourceCompiles)
include(CheckPrototypeDefinition)
include(CheckCCompilerFlag)
include(CheckTypeSize)
include(CheckFunctionExists)

set(OSMSCOUT_EXPORT_SYMBOLS OFF)
set(OSMSCOUT_IMPORT_EXPORT_SYMBOLS ${OSMSCOUT_EXPORT_SYMBOLS})
set(OSMSCOUT_MAP_EXPORT_SYMBOLS ${OSMSCOUT_EXPORT_SYMBOLS})

if(NOT MSVC)
  check_c_compiler_flag(-faltivec HAVE_ALTIVEC)
  check_c_compiler_flag(-mavx HAVE_AVX)
  check_c_compiler_flag(-mmmx HAVE_MMX)
  check_c_compiler_flag(-msse HAVE_SSE)
  check_c_compiler_flag(-msse2 HAVE_SSE2)
  check_c_compiler_flag(-msse3 HAVE_SSE3)
  check_c_compiler_flag(-msse4.1 HAVE_SSE4_1)
  check_c_compiler_flag(-msse4.2 HAVE_SSE4_2)
  check_c_compiler_flag(-mssse3 HAVE_SSSE3)
else()
  set(HAVE_ALTIVEC OFF)
  set(HAVE_AVX ON)
  set(HAVE_MMX ON)
  set(HAVE_SSE ON)
  set(HAVE_SSE2 ON)
  set(HAVE_SSE3 OFF)
  set(HAVE_SSE4_1 OFF)
  set(HAVE_SSE4_2 OFF)
  set(HAVE_SSSE3 OFF)
endif()
check_include_file(dlfcn.h HAVE_DLFCN_H)
check_include_file(fcntl.h HAVE_FCNTL_H)
check_function_exists(fseeko HAVE_FSEEKO)
check_include_file(inttypes.h HAVE_INTTYPES_H)
set(CMAKE_EXTRA_INCLUDE_FILES inttypes.h)
check_type_size(int16_t HAVE_INT16_T)
check_type_size(int32_t HAVE_INT32_T)
check_type_size(int64_t HAVE_INT64_T)
check_type_size(int8_t HAVE_INT8_T)
check_type_size("long long" HAVE_LONG_LONG)
check_type_size(uint16_t HAVE_UINT16_T)
check_type_size(uint32_t HAVE_UINT32_T)
check_type_size(uint64_t HAVE_UINT64_T)
check_type_size(uint8_t HAVE_UINT8_T)
check_type_size("unsigned long long" HAVE_UNSIGNED_LONG_LONG)
set(CMAKE_EXTRA_INCLUDE_FILES wchar.h)
check_type_size(wchar_t SIZEOF_WCHAR_T)
set(CMAKE_EXTRA_INCLUDE_FILES)
check_include_file(memory.h HAVE_MEMORY_H)
check_function_exists(mmap HAVE_MMAP)
check_function_exists(posix_fadvise HAVE_POSIX_FADVISE)
check_function_exists(posix_madvise HAVE_POSIX_MADVISE)
check_include_file(stdint.h HAVE_STDINT_H)
check_include_file(stdlib.h HAVE_STDLIB_H)
check_cxx_source_compiles("
#include <string>
int main()
{
  std::wstring value=L\"Hello\";
}
" HAVE_STD__WSTRING)
check_include_file(strings.h HAVE_STRINGS_H)
check_include_file(string.h HAVE_STRING_H)
check_include_file(sys/stat.h HAVE_SYS_STAT_H)
check_include_file(sys/time.h HAVE_SYS_TIME_H)
check_include_file(sys/types.h HAVE_SYS_TYPES_H)
check_include_file(unistd.h HAVE_UNISTD_H)
if(CMAKE_COMPILER_IS_GNUCXX)
  check_cxx_compiler_flag(-fvisibility=hidden HAVE_VISIBILITY)
else()
  set(HAVE_VISIBILITY OFF)
endif()
if(${HAVE_STDINT_H} AND ${HAVE_STDLIB_H} AND ${HAVE_INTTYPES_H} AND ${HAVE_STRING_H} AND ${HAVE_MEMORY_H})
  set(STDC_HEADERS ON)
else()
  set(STDC_HEADERS OFF)
endif()
set(OSMSCOUT_HAVE_INT16_T ${HAVE_INT16_T})
set(OSMSCOUT_HAVE_INT32_T ${HAVE_INT32_T})
set(OSMSCOUT_HAVE_INT64_T ${HAVE_INT64_T})
set(OSMSCOUT_HAVE_INT8_T ${HAVE_INT8_T})
find_package(Marisa REQUIRED)
set(HAVE_LIB_MARISA ${MARISA_FOUND})
find_package(LibXml2)
set(HAVE_LIB_XML ${LIBXML2_FOUND})
find_package(MyProtobuf)
set(HAVE_LIB_PROTOBUF ${PROTOBUF_FOUND})
find_package(ZLIB)
set(HAVE_LIB_ZLIB ${ZLIB_FOUND})
find_package(Cairo)
set(HAVE_LIB_CAIRO ${CAIRO_FOUND})
find_package(Agg)
set(HAVE_LIB_AGG ${LIBAGG_FOUND})
find_package(Freetype)
set(HAVE_LIB_FREETYPE ${FREETYPE_FOUND})
find_package(PANGO)
set(HAVE_LIB_PANGO ${PANGO_FOUND})
find_package(PNG)
set(HAVE_LIB_PNG ${PNG_FOUND})
find_package(OpenGL)
set(HAVE_LIB_OPENGL ${OPENGL_FOUND})
find_package(GLUT)
set(HAVE_LIB_GLUT ${GLUT_FOUND})
set(CMAKE_AUTOMOC OFF)
find_package(Qt5Gui)
set(HAVE_LIB_QT5_GUI ${Qt5Gui_FOUND})
find_package(Qt5Widgets)
set(HAVE_LIB_QT5_WIDGETS ${Qt5Widgets_FOUND})
set(OSMSCOUT_HAVE_LIB_MARISA ${HAVE_LIB_MARISA})
set(OSMSCOUT_HAVE_LONG_LONG ${HAVE_LONG_LONG})
set(OSMSCOUT_HAVE_SSE2 ${HAVE_SSE2})
set(OSMSCOUT_HAVE_STDINT_H ${HAVE_STDINT_H})
set(OSMSCOUT_HAVE_STD_WSTRING ${HAVE_STD__WSTRING})
set(OSMSCOUT_HAVE_UINT16_T ${HAVE_UINT16_T})
set(OSMSCOUT_HAVE_UINT32_T ${HAVE_UINT32_T})
set(OSMSCOUT_HAVE_UINT64_T ${HAVE_UINT64_T})
set(OSMSCOUT_HAVE_UINT8_T ${HAVE_UINT8_T})
set(OSMSCOUT_HAVE_ULONG_LONG ${HAVE_UNSIGNED_LONG_LONG})
set(OSMSCOUT_IMPORT_HAVE_LIB_MARISA ${MARISA_FOUND})
set(OSMSCOUT_MAP_CAIRO_HAVE_LIB_PANGO ${HAVE_LIB_PANGO})
set(OSMSCOUT_MAP_OPENGL_HAVE_GL_GLUT_H ${HAVE_LIB_GLUT})
set(OSMSCOUT_MAP_OPENGL_HAVE_GLUT_GLUT_H OFF)
set(OSMSCOUT_MAP_SVG_HAVE_LIB_PANGO ${HAVE_LIB_PANGO})
