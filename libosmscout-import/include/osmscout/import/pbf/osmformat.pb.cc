// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: osmformat.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "osmformat.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace PBF {

namespace {

const ::google::protobuf::Descriptor* HeaderBlock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeaderBlock_reflection_ = NULL;
const ::google::protobuf::Descriptor* HeaderBBox_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  HeaderBBox_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrimitiveBlock_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrimitiveBlock_reflection_ = NULL;
const ::google::protobuf::Descriptor* PrimitiveGroup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  PrimitiveGroup_reflection_ = NULL;
const ::google::protobuf::Descriptor* StringTable_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  StringTable_reflection_ = NULL;
const ::google::protobuf::Descriptor* Info_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Info_reflection_ = NULL;
const ::google::protobuf::Descriptor* DenseInfo_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DenseInfo_reflection_ = NULL;
const ::google::protobuf::Descriptor* ChangeSet_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ChangeSet_reflection_ = NULL;
const ::google::protobuf::Descriptor* Node_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Node_reflection_ = NULL;
const ::google::protobuf::Descriptor* DenseNodes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  DenseNodes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Way_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Way_reflection_ = NULL;
const ::google::protobuf::Descriptor* Relation_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Relation_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Relation_MemberType_descriptor_ = NULL;

}  // namespace


void protobuf_AssignDesc_osmformat_2eproto() {
  protobuf_AddDesc_osmformat_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "osmformat.proto");
  GOOGLE_CHECK(file != NULL);
  HeaderBlock_descriptor_ = file->message_type(0);
  static const int HeaderBlock_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBlock, bbox_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBlock, required_features_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBlock, optional_features_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBlock, writingprogram_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBlock, source_),
  };
  HeaderBlock_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeaderBlock_descriptor_,
      HeaderBlock::default_instance_,
      HeaderBlock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBlock, _has_bits_[0]),
      -1,
      -1,
      sizeof(HeaderBlock),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBlock, _internal_metadata_),
      -1);
  HeaderBBox_descriptor_ = file->message_type(1);
  static const int HeaderBBox_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBBox, left_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBBox, right_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBBox, top_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBBox, bottom_),
  };
  HeaderBBox_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      HeaderBBox_descriptor_,
      HeaderBBox::default_instance_,
      HeaderBBox_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBBox, _has_bits_[0]),
      -1,
      -1,
      sizeof(HeaderBBox),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(HeaderBBox, _internal_metadata_),
      -1);
  PrimitiveBlock_descriptor_ = file->message_type(2);
  static const int PrimitiveBlock_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveBlock, stringtable_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveBlock, primitivegroup_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveBlock, granularity_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveBlock, lat_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveBlock, lon_offset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveBlock, date_granularity_),
  };
  PrimitiveBlock_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrimitiveBlock_descriptor_,
      PrimitiveBlock::default_instance_,
      PrimitiveBlock_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveBlock, _has_bits_[0]),
      -1,
      -1,
      sizeof(PrimitiveBlock),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveBlock, _internal_metadata_),
      -1);
  PrimitiveGroup_descriptor_ = file->message_type(3);
  static const int PrimitiveGroup_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveGroup, nodes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveGroup, dense_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveGroup, ways_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveGroup, relations_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveGroup, changesets_),
  };
  PrimitiveGroup_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      PrimitiveGroup_descriptor_,
      PrimitiveGroup::default_instance_,
      PrimitiveGroup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveGroup, _has_bits_[0]),
      -1,
      -1,
      sizeof(PrimitiveGroup),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(PrimitiveGroup, _internal_metadata_),
      -1);
  StringTable_descriptor_ = file->message_type(4);
  static const int StringTable_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringTable, s_),
  };
  StringTable_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      StringTable_descriptor_,
      StringTable::default_instance_,
      StringTable_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringTable, _has_bits_[0]),
      -1,
      -1,
      sizeof(StringTable),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringTable, _internal_metadata_),
      -1);
  Info_descriptor_ = file->message_type(5);
  static const int Info_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, changeset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, user_sid_),
  };
  Info_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Info_descriptor_,
      Info::default_instance_,
      Info_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, _has_bits_[0]),
      -1,
      -1,
      sizeof(Info),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Info, _internal_metadata_),
      -1);
  DenseInfo_descriptor_ = file->message_type(6);
  static const int DenseInfo_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseInfo, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseInfo, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseInfo, changeset_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseInfo, uid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseInfo, user_sid_),
  };
  DenseInfo_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DenseInfo_descriptor_,
      DenseInfo::default_instance_,
      DenseInfo_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseInfo, _has_bits_[0]),
      -1,
      -1,
      sizeof(DenseInfo),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseInfo, _internal_metadata_),
      -1);
  ChangeSet_descriptor_ = file->message_type(7);
  static const int ChangeSet_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeSet, id_),
  };
  ChangeSet_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      ChangeSet_descriptor_,
      ChangeSet::default_instance_,
      ChangeSet_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeSet, _has_bits_[0]),
      -1,
      -1,
      sizeof(ChangeSet),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ChangeSet, _internal_metadata_),
      -1);
  Node_descriptor_ = file->message_type(8);
  static const int Node_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, keys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, vals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, lat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, lon_),
  };
  Node_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Node_descriptor_,
      Node::default_instance_,
      Node_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, _has_bits_[0]),
      -1,
      -1,
      sizeof(Node),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Node, _internal_metadata_),
      -1);
  DenseNodes_descriptor_ = file->message_type(9);
  static const int DenseNodes_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseNodes, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseNodes, denseinfo_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseNodes, lat_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseNodes, lon_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseNodes, keys_vals_),
  };
  DenseNodes_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      DenseNodes_descriptor_,
      DenseNodes::default_instance_,
      DenseNodes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseNodes, _has_bits_[0]),
      -1,
      -1,
      sizeof(DenseNodes),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DenseNodes, _internal_metadata_),
      -1);
  Way_descriptor_ = file->message_type(10);
  static const int Way_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Way, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Way, keys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Way, vals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Way, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Way, refs_),
  };
  Way_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Way_descriptor_,
      Way::default_instance_,
      Way_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Way, _has_bits_[0]),
      -1,
      -1,
      sizeof(Way),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Way, _internal_metadata_),
      -1);
  Relation_descriptor_ = file->message_type(11);
  static const int Relation_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, keys_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, vals_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, info_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, roles_sid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, memids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, types_),
  };
  Relation_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      Relation_descriptor_,
      Relation::default_instance_,
      Relation_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, _has_bits_[0]),
      -1,
      -1,
      sizeof(Relation),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Relation, _internal_metadata_),
      -1);
  Relation_MemberType_descriptor_ = Relation_descriptor_->enum_type(0);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_osmformat_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeaderBlock_descriptor_, &HeaderBlock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      HeaderBBox_descriptor_, &HeaderBBox::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrimitiveBlock_descriptor_, &PrimitiveBlock::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      PrimitiveGroup_descriptor_, &PrimitiveGroup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      StringTable_descriptor_, &StringTable::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Info_descriptor_, &Info::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DenseInfo_descriptor_, &DenseInfo::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      ChangeSet_descriptor_, &ChangeSet::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Node_descriptor_, &Node::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      DenseNodes_descriptor_, &DenseNodes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Way_descriptor_, &Way::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      Relation_descriptor_, &Relation::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_osmformat_2eproto() {
  delete HeaderBlock::default_instance_;
  delete HeaderBlock_reflection_;
  delete HeaderBBox::default_instance_;
  delete HeaderBBox_reflection_;
  delete PrimitiveBlock::default_instance_;
  delete PrimitiveBlock_reflection_;
  delete PrimitiveGroup::default_instance_;
  delete PrimitiveGroup_reflection_;
  delete StringTable::default_instance_;
  delete StringTable_reflection_;
  delete Info::default_instance_;
  delete Info_reflection_;
  delete DenseInfo::default_instance_;
  delete DenseInfo_reflection_;
  delete ChangeSet::default_instance_;
  delete ChangeSet_reflection_;
  delete Node::default_instance_;
  delete Node_reflection_;
  delete DenseNodes::default_instance_;
  delete DenseNodes_reflection_;
  delete Way::default_instance_;
  delete Way_reflection_;
  delete Relation::default_instance_;
  delete Relation_reflection_;
}

void protobuf_AddDesc_osmformat_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\017osmformat.proto\022\003PBF\"\212\001\n\013HeaderBlock\022\035"
    "\n\004bbox\030\001 \001(\0132\017.PBF.HeaderBBox\022\031\n\021require"
    "d_features\030\004 \003(\t\022\031\n\021optional_features\030\005 "
    "\003(\t\022\026\n\016writingprogram\030\020 \001(\t\022\016\n\006source\030\021 "
    "\001(\t\"F\n\nHeaderBBox\022\014\n\004left\030\001 \002(\022\022\r\n\005right"
    "\030\002 \002(\022\022\013\n\003top\030\003 \002(\022\022\016\n\006bottom\030\004 \002(\022\"\314\001\n\016"
    "PrimitiveBlock\022%\n\013stringtable\030\001 \002(\0132\020.PB"
    "F.StringTable\022+\n\016primitivegroup\030\002 \003(\0132\023."
    "PBF.PrimitiveGroup\022\030\n\013granularity\030\021 \001(\005:"
    "\003100\022\025\n\nlat_offset\030\023 \001(\003:\0010\022\025\n\nlon_offse"
    "t\030\024 \001(\003:\0010\022\036\n\020date_granularity\030\022 \001(\005:\00410"
    "00\"\250\001\n\016PrimitiveGroup\022\030\n\005nodes\030\001 \003(\0132\t.P"
    "BF.Node\022\036\n\005dense\030\002 \001(\0132\017.PBF.DenseNodes\022"
    "\026\n\004ways\030\003 \003(\0132\010.PBF.Way\022 \n\trelations\030\004 \003"
    "(\0132\r.PBF.Relation\022\"\n\nchangesets\030\005 \003(\0132\016."
    "PBF.ChangeSet\"\030\n\013StringTable\022\t\n\001s\030\001 \003(\014\""
    "`\n\004Info\022\023\n\007version\030\001 \001(\005:\002-1\022\021\n\ttimestam"
    "p\030\002 \001(\003\022\021\n\tchangeset\030\003 \001(\003\022\013\n\003uid\030\004 \001(\005\022"
    "\020\n\010user_sid\030\005 \001(\005\"u\n\tDenseInfo\022\023\n\007versio"
    "n\030\001 \003(\005B\002\020\001\022\025\n\ttimestamp\030\002 \003(\022B\002\020\001\022\025\n\tch"
    "angeset\030\003 \003(\022B\002\020\001\022\017\n\003uid\030\004 \003(\021B\002\020\001\022\024\n\010us"
    "er_sid\030\005 \003(\021B\002\020\001\"\027\n\tChangeSet\022\n\n\002id\030\001 \002("
    "\003\"i\n\004Node\022\n\n\002id\030\001 \002(\022\022\020\n\004keys\030\002 \003(\rB\002\020\001\022"
    "\020\n\004vals\030\003 \003(\rB\002\020\001\022\027\n\004info\030\004 \001(\0132\t.PBF.In"
    "fo\022\013\n\003lat\030\010 \002(\022\022\013\n\003lon\030\t \002(\022\"x\n\nDenseNod"
    "es\022\016\n\002id\030\001 \003(\022B\002\020\001\022!\n\tdenseinfo\030\005 \001(\0132\016."
    "PBF.DenseInfo\022\017\n\003lat\030\010 \003(\022B\002\020\001\022\017\n\003lon\030\t "
    "\003(\022B\002\020\001\022\025\n\tkeys_vals\030\n \003(\005B\002\020\001\"`\n\003Way\022\n\n"
    "\002id\030\001 \002(\003\022\020\n\004keys\030\002 \003(\rB\002\020\001\022\020\n\004vals\030\003 \003("
    "\rB\002\020\001\022\027\n\004info\030\004 \001(\0132\t.PBF.Info\022\020\n\004refs\030\010"
    " \003(\022B\002\020\001\"\332\001\n\010Relation\022\n\n\002id\030\001 \002(\003\022\020\n\004key"
    "s\030\002 \003(\rB\002\020\001\022\020\n\004vals\030\003 \003(\rB\002\020\001\022\027\n\004info\030\004 "
    "\001(\0132\t.PBF.Info\022\025\n\troles_sid\030\010 \003(\005B\002\020\001\022\022\n"
    "\006memids\030\t \003(\022B\002\020\001\022+\n\005types\030\n \003(\0162\030.PBF.R"
    "elation.MemberTypeB\002\020\001\"-\n\nMemberType\022\010\n\004"
    "NODE\020\000\022\007\n\003WAY\020\001\022\014\n\010RELATION\020\002", 1429);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "osmformat.proto", &protobuf_RegisterTypes);
  HeaderBlock::default_instance_ = new HeaderBlock();
  HeaderBBox::default_instance_ = new HeaderBBox();
  PrimitiveBlock::default_instance_ = new PrimitiveBlock();
  PrimitiveGroup::default_instance_ = new PrimitiveGroup();
  StringTable::default_instance_ = new StringTable();
  Info::default_instance_ = new Info();
  DenseInfo::default_instance_ = new DenseInfo();
  ChangeSet::default_instance_ = new ChangeSet();
  Node::default_instance_ = new Node();
  DenseNodes::default_instance_ = new DenseNodes();
  Way::default_instance_ = new Way();
  Relation::default_instance_ = new Relation();
  HeaderBlock::default_instance_->InitAsDefaultInstance();
  HeaderBBox::default_instance_->InitAsDefaultInstance();
  PrimitiveBlock::default_instance_->InitAsDefaultInstance();
  PrimitiveGroup::default_instance_->InitAsDefaultInstance();
  StringTable::default_instance_->InitAsDefaultInstance();
  Info::default_instance_->InitAsDefaultInstance();
  DenseInfo::default_instance_->InitAsDefaultInstance();
  ChangeSet::default_instance_->InitAsDefaultInstance();
  Node::default_instance_->InitAsDefaultInstance();
  DenseNodes::default_instance_->InitAsDefaultInstance();
  Way::default_instance_->InitAsDefaultInstance();
  Relation::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_osmformat_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_osmformat_2eproto {
  StaticDescriptorInitializer_osmformat_2eproto() {
    protobuf_AddDesc_osmformat_2eproto();
  }
} static_descriptor_initializer_osmformat_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeaderBlock::kBboxFieldNumber;
const int HeaderBlock::kRequiredFeaturesFieldNumber;
const int HeaderBlock::kOptionalFeaturesFieldNumber;
const int HeaderBlock::kWritingprogramFieldNumber;
const int HeaderBlock::kSourceFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeaderBlock::HeaderBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.HeaderBlock)
}

void HeaderBlock::InitAsDefaultInstance() {
  bbox_ = const_cast< ::PBF::HeaderBBox*>(&::PBF::HeaderBBox::default_instance());
}

HeaderBlock::HeaderBlock(const HeaderBlock& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.HeaderBlock)
}

void HeaderBlock::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  bbox_ = NULL;
  writingprogram_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeaderBlock::~HeaderBlock() {
  // @@protoc_insertion_point(destructor:PBF.HeaderBlock)
  SharedDtor();
}

void HeaderBlock::SharedDtor() {
  writingprogram_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  source_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
    delete bbox_;
  }
}

void HeaderBlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeaderBlock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeaderBlock_descriptor_;
}

const HeaderBlock& HeaderBlock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

HeaderBlock* HeaderBlock::default_instance_ = NULL;

HeaderBlock* HeaderBlock::New(::google::protobuf::Arena* arena) const {
  HeaderBlock* n = new HeaderBlock;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeaderBlock::Clear() {
  if (_has_bits_[0 / 32] & 25u) {
    if (has_bbox()) {
      if (bbox_ != NULL) bbox_->::PBF::HeaderBBox::Clear();
    }
    if (has_writingprogram()) {
      writingprogram_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    if (has_source()) {
      source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
  }
  required_features_.Clear();
  optional_features_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HeaderBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.HeaderBlock)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional .PBF.HeaderBBox bbox = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bbox()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_required_features;
        break;
      }

      // repeated string required_features = 4;
      case 4: {
        if (tag == 34) {
         parse_required_features:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_required_features()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->required_features(this->required_features_size() - 1).data(),
            this->required_features(this->required_features_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBF.HeaderBlock.required_features");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_required_features;
        if (input->ExpectTag(42)) goto parse_optional_features;
        break;
      }

      // repeated string optional_features = 5;
      case 5: {
        if (tag == 42) {
         parse_optional_features:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_optional_features()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->optional_features(this->optional_features_size() - 1).data(),
            this->optional_features(this->optional_features_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBF.HeaderBlock.optional_features");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_optional_features;
        if (input->ExpectTag(130)) goto parse_writingprogram;
        break;
      }

      // optional string writingprogram = 16;
      case 16: {
        if (tag == 130) {
         parse_writingprogram:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_writingprogram()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->writingprogram().data(), this->writingprogram().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBF.HeaderBlock.writingprogram");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(138)) goto parse_source;
        break;
      }

      // optional string source = 17;
      case 17: {
        if (tag == 138) {
         parse_source:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_source()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->source().data(), this->source().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "PBF.HeaderBlock.source");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.HeaderBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.HeaderBlock)
  return false;
#undef DO_
}

void HeaderBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.HeaderBlock)
  // optional .PBF.HeaderBBox bbox = 1;
  if (has_bbox()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->bbox_, output);
  }

  // repeated string required_features = 4;
  for (int i = 0; i < this->required_features_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_features(i).data(), this->required_features(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBF.HeaderBlock.required_features");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      4, this->required_features(i), output);
  }

  // repeated string optional_features = 5;
  for (int i = 0; i < this->optional_features_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_features(i).data(), this->optional_features(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBF.HeaderBlock.optional_features");
    ::google::protobuf::internal::WireFormatLite::WriteString(
      5, this->optional_features(i), output);
  }

  // optional string writingprogram = 16;
  if (has_writingprogram()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->writingprogram().data(), this->writingprogram().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBF.HeaderBlock.writingprogram");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      16, this->writingprogram(), output);
  }

  // optional string source = 17;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBF.HeaderBlock.source");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      17, this->source(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.HeaderBlock)
}

::google::protobuf::uint8* HeaderBlock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.HeaderBlock)
  // optional .PBF.HeaderBBox bbox = 1;
  if (has_bbox()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->bbox_, target);
  }

  // repeated string required_features = 4;
  for (int i = 0; i < this->required_features_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->required_features(i).data(), this->required_features(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBF.HeaderBlock.required_features");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(4, this->required_features(i), target);
  }

  // repeated string optional_features = 5;
  for (int i = 0; i < this->optional_features_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->optional_features(i).data(), this->optional_features(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBF.HeaderBlock.optional_features");
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(5, this->optional_features(i), target);
  }

  // optional string writingprogram = 16;
  if (has_writingprogram()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->writingprogram().data(), this->writingprogram().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBF.HeaderBlock.writingprogram");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        16, this->writingprogram(), target);
  }

  // optional string source = 17;
  if (has_source()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->source().data(), this->source().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "PBF.HeaderBlock.source");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        17, this->source(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.HeaderBlock)
  return target;
}

int HeaderBlock::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 25u) {
    // optional .PBF.HeaderBBox bbox = 1;
    if (has_bbox()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          *this->bbox_);
    }

    // optional string writingprogram = 16;
    if (has_writingprogram()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->writingprogram());
    }

    // optional string source = 17;
    if (has_source()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->source());
    }

  }
  // repeated string required_features = 4;
  total_size += 1 * this->required_features_size();
  for (int i = 0; i < this->required_features_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->required_features(i));
  }

  // repeated string optional_features = 5;
  total_size += 1 * this->optional_features_size();
  for (int i = 0; i < this->optional_features_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->optional_features(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeaderBlock::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HeaderBlock* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HeaderBlock>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeaderBlock::MergeFrom(const HeaderBlock& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  required_features_.MergeFrom(from.required_features_);
  optional_features_.MergeFrom(from.optional_features_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bbox()) {
      mutable_bbox()->::PBF::HeaderBBox::MergeFrom(from.bbox());
    }
    if (from.has_writingprogram()) {
      set_has_writingprogram();
      writingprogram_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.writingprogram_);
    }
    if (from.has_source()) {
      set_has_source();
      source_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.source_);
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HeaderBlock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeaderBlock::CopyFrom(const HeaderBlock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeaderBlock::IsInitialized() const {

  if (has_bbox()) {
    if (!this->bbox_->IsInitialized()) return false;
  }
  return true;
}

void HeaderBlock::Swap(HeaderBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeaderBlock::InternalSwap(HeaderBlock* other) {
  std::swap(bbox_, other->bbox_);
  required_features_.UnsafeArenaSwap(&other->required_features_);
  optional_features_.UnsafeArenaSwap(&other->optional_features_);
  writingprogram_.Swap(&other->writingprogram_);
  source_.Swap(&other->source_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeaderBlock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeaderBlock_descriptor_;
  metadata.reflection = HeaderBlock_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeaderBlock

// optional .PBF.HeaderBBox bbox = 1;
bool HeaderBlock::has_bbox() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HeaderBlock::set_has_bbox() {
  _has_bits_[0] |= 0x00000001u;
}
void HeaderBlock::clear_has_bbox() {
  _has_bits_[0] &= ~0x00000001u;
}
void HeaderBlock::clear_bbox() {
  if (bbox_ != NULL) bbox_->::PBF::HeaderBBox::Clear();
  clear_has_bbox();
}
const ::PBF::HeaderBBox& HeaderBlock::bbox() const {
  // @@protoc_insertion_point(field_get:PBF.HeaderBlock.bbox)
  return bbox_ != NULL ? *bbox_ : *default_instance_->bbox_;
}
::PBF::HeaderBBox* HeaderBlock::mutable_bbox() {
  set_has_bbox();
  if (bbox_ == NULL) {
    bbox_ = new ::PBF::HeaderBBox;
  }
  // @@protoc_insertion_point(field_mutable:PBF.HeaderBlock.bbox)
  return bbox_;
}
::PBF::HeaderBBox* HeaderBlock::release_bbox() {
  clear_has_bbox();
  ::PBF::HeaderBBox* temp = bbox_;
  bbox_ = NULL;
  return temp;
}
void HeaderBlock::set_allocated_bbox(::PBF::HeaderBBox* bbox) {
  delete bbox_;
  bbox_ = bbox;
  if (bbox) {
    set_has_bbox();
  } else {
    clear_has_bbox();
  }
  // @@protoc_insertion_point(field_set_allocated:PBF.HeaderBlock.bbox)
}

// repeated string required_features = 4;
int HeaderBlock::required_features_size() const {
  return required_features_.size();
}
void HeaderBlock::clear_required_features() {
  required_features_.Clear();
}
 const ::std::string& HeaderBlock::required_features(int index) const {
  // @@protoc_insertion_point(field_get:PBF.HeaderBlock.required_features)
  return required_features_.Get(index);
}
 ::std::string* HeaderBlock::mutable_required_features(int index) {
  // @@protoc_insertion_point(field_mutable:PBF.HeaderBlock.required_features)
  return required_features_.Mutable(index);
}
 void HeaderBlock::set_required_features(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PBF.HeaderBlock.required_features)
  required_features_.Mutable(index)->assign(value);
}
 void HeaderBlock::set_required_features(int index, const char* value) {
  required_features_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PBF.HeaderBlock.required_features)
}
 void HeaderBlock::set_required_features(int index, const char* value, size_t size) {
  required_features_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PBF.HeaderBlock.required_features)
}
 ::std::string* HeaderBlock::add_required_features() {
  return required_features_.Add();
}
 void HeaderBlock::add_required_features(const ::std::string& value) {
  required_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PBF.HeaderBlock.required_features)
}
 void HeaderBlock::add_required_features(const char* value) {
  required_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PBF.HeaderBlock.required_features)
}
 void HeaderBlock::add_required_features(const char* value, size_t size) {
  required_features_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PBF.HeaderBlock.required_features)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
HeaderBlock::required_features() const {
  // @@protoc_insertion_point(field_list:PBF.HeaderBlock.required_features)
  return required_features_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
HeaderBlock::mutable_required_features() {
  // @@protoc_insertion_point(field_mutable_list:PBF.HeaderBlock.required_features)
  return &required_features_;
}

// repeated string optional_features = 5;
int HeaderBlock::optional_features_size() const {
  return optional_features_.size();
}
void HeaderBlock::clear_optional_features() {
  optional_features_.Clear();
}
 const ::std::string& HeaderBlock::optional_features(int index) const {
  // @@protoc_insertion_point(field_get:PBF.HeaderBlock.optional_features)
  return optional_features_.Get(index);
}
 ::std::string* HeaderBlock::mutable_optional_features(int index) {
  // @@protoc_insertion_point(field_mutable:PBF.HeaderBlock.optional_features)
  return optional_features_.Mutable(index);
}
 void HeaderBlock::set_optional_features(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PBF.HeaderBlock.optional_features)
  optional_features_.Mutable(index)->assign(value);
}
 void HeaderBlock::set_optional_features(int index, const char* value) {
  optional_features_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PBF.HeaderBlock.optional_features)
}
 void HeaderBlock::set_optional_features(int index, const char* value, size_t size) {
  optional_features_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PBF.HeaderBlock.optional_features)
}
 ::std::string* HeaderBlock::add_optional_features() {
  return optional_features_.Add();
}
 void HeaderBlock::add_optional_features(const ::std::string& value) {
  optional_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PBF.HeaderBlock.optional_features)
}
 void HeaderBlock::add_optional_features(const char* value) {
  optional_features_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PBF.HeaderBlock.optional_features)
}
 void HeaderBlock::add_optional_features(const char* value, size_t size) {
  optional_features_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PBF.HeaderBlock.optional_features)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
HeaderBlock::optional_features() const {
  // @@protoc_insertion_point(field_list:PBF.HeaderBlock.optional_features)
  return optional_features_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
HeaderBlock::mutable_optional_features() {
  // @@protoc_insertion_point(field_mutable_list:PBF.HeaderBlock.optional_features)
  return &optional_features_;
}

// optional string writingprogram = 16;
bool HeaderBlock::has_writingprogram() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HeaderBlock::set_has_writingprogram() {
  _has_bits_[0] |= 0x00000008u;
}
void HeaderBlock::clear_has_writingprogram() {
  _has_bits_[0] &= ~0x00000008u;
}
void HeaderBlock::clear_writingprogram() {
  writingprogram_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_writingprogram();
}
 const ::std::string& HeaderBlock::writingprogram() const {
  // @@protoc_insertion_point(field_get:PBF.HeaderBlock.writingprogram)
  return writingprogram_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HeaderBlock::set_writingprogram(const ::std::string& value) {
  set_has_writingprogram();
  writingprogram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBF.HeaderBlock.writingprogram)
}
 void HeaderBlock::set_writingprogram(const char* value) {
  set_has_writingprogram();
  writingprogram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBF.HeaderBlock.writingprogram)
}
 void HeaderBlock::set_writingprogram(const char* value, size_t size) {
  set_has_writingprogram();
  writingprogram_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBF.HeaderBlock.writingprogram)
}
 ::std::string* HeaderBlock::mutable_writingprogram() {
  set_has_writingprogram();
  // @@protoc_insertion_point(field_mutable:PBF.HeaderBlock.writingprogram)
  return writingprogram_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HeaderBlock::release_writingprogram() {
  clear_has_writingprogram();
  return writingprogram_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HeaderBlock::set_allocated_writingprogram(::std::string* writingprogram) {
  if (writingprogram != NULL) {
    set_has_writingprogram();
  } else {
    clear_has_writingprogram();
  }
  writingprogram_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), writingprogram);
  // @@protoc_insertion_point(field_set_allocated:PBF.HeaderBlock.writingprogram)
}

// optional string source = 17;
bool HeaderBlock::has_source() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void HeaderBlock::set_has_source() {
  _has_bits_[0] |= 0x00000010u;
}
void HeaderBlock::clear_has_source() {
  _has_bits_[0] &= ~0x00000010u;
}
void HeaderBlock::clear_source() {
  source_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_source();
}
 const ::std::string& HeaderBlock::source() const {
  // @@protoc_insertion_point(field_get:PBF.HeaderBlock.source)
  return source_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HeaderBlock::set_source(const ::std::string& value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:PBF.HeaderBlock.source)
}
 void HeaderBlock::set_source(const char* value) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:PBF.HeaderBlock.source)
}
 void HeaderBlock::set_source(const char* value, size_t size) {
  set_has_source();
  source_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:PBF.HeaderBlock.source)
}
 ::std::string* HeaderBlock::mutable_source() {
  set_has_source();
  // @@protoc_insertion_point(field_mutable:PBF.HeaderBlock.source)
  return source_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* HeaderBlock::release_source() {
  clear_has_source();
  return source_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void HeaderBlock::set_allocated_source(::std::string* source) {
  if (source != NULL) {
    set_has_source();
  } else {
    clear_has_source();
  }
  source_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), source);
  // @@protoc_insertion_point(field_set_allocated:PBF.HeaderBlock.source)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int HeaderBBox::kLeftFieldNumber;
const int HeaderBBox::kRightFieldNumber;
const int HeaderBBox::kTopFieldNumber;
const int HeaderBBox::kBottomFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

HeaderBBox::HeaderBBox()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.HeaderBBox)
}

void HeaderBBox::InitAsDefaultInstance() {
}

HeaderBBox::HeaderBBox(const HeaderBBox& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.HeaderBBox)
}

void HeaderBBox::SharedCtor() {
  _cached_size_ = 0;
  left_ = GOOGLE_LONGLONG(0);
  right_ = GOOGLE_LONGLONG(0);
  top_ = GOOGLE_LONGLONG(0);
  bottom_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

HeaderBBox::~HeaderBBox() {
  // @@protoc_insertion_point(destructor:PBF.HeaderBBox)
  SharedDtor();
}

void HeaderBBox::SharedDtor() {
  if (this != default_instance_) {
  }
}

void HeaderBBox::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* HeaderBBox::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return HeaderBBox_descriptor_;
}

const HeaderBBox& HeaderBBox::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

HeaderBBox* HeaderBBox::default_instance_ = NULL;

HeaderBBox* HeaderBBox::New(::google::protobuf::Arena* arena) const {
  HeaderBBox* n = new HeaderBBox;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void HeaderBBox::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<HeaderBBox*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  ZR_(left_, bottom_);

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool HeaderBBox::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.HeaderBBox)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint64 left = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &left_)));
          set_has_left();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_right;
        break;
      }

      // required sint64 right = 2;
      case 2: {
        if (tag == 16) {
         parse_right:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &right_)));
          set_has_right();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_top;
        break;
      }

      // required sint64 top = 3;
      case 3: {
        if (tag == 24) {
         parse_top:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &top_)));
          set_has_top();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_bottom;
        break;
      }

      // required sint64 bottom = 4;
      case 4: {
        if (tag == 32) {
         parse_bottom:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &bottom_)));
          set_has_bottom();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.HeaderBBox)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.HeaderBBox)
  return false;
#undef DO_
}

void HeaderBBox::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.HeaderBBox)
  // required sint64 left = 1;
  if (has_left()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->left(), output);
  }

  // required sint64 right = 2;
  if (has_right()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(2, this->right(), output);
  }

  // required sint64 top = 3;
  if (has_top()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(3, this->top(), output);
  }

  // required sint64 bottom = 4;
  if (has_bottom()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(4, this->bottom(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.HeaderBBox)
}

::google::protobuf::uint8* HeaderBBox::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.HeaderBBox)
  // required sint64 left = 1;
  if (has_left()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->left(), target);
  }

  // required sint64 right = 2;
  if (has_right()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(2, this->right(), target);
  }

  // required sint64 top = 3;
  if (has_top()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(3, this->top(), target);
  }

  // required sint64 bottom = 4;
  if (has_bottom()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(4, this->bottom(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.HeaderBBox)
  return target;
}

int HeaderBBox::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_left()) {
    // required sint64 left = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->left());
  }

  if (has_right()) {
    // required sint64 right = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->right());
  }

  if (has_top()) {
    // required sint64 top = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->top());
  }

  if (has_bottom()) {
    // required sint64 bottom = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->bottom());
  }

  return total_size;
}
int HeaderBBox::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x0000000f) ^ 0x0000000f) == 0) {  // All required fields are present.
    // required sint64 left = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->left());

    // required sint64 right = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->right());

    // required sint64 top = 3;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->top());

    // required sint64 bottom = 4;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->bottom());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void HeaderBBox::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const HeaderBBox* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const HeaderBBox>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void HeaderBBox::MergeFrom(const HeaderBBox& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_left()) {
      set_left(from.left());
    }
    if (from.has_right()) {
      set_right(from.right());
    }
    if (from.has_top()) {
      set_top(from.top());
    }
    if (from.has_bottom()) {
      set_bottom(from.bottom());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void HeaderBBox::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void HeaderBBox::CopyFrom(const HeaderBBox& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool HeaderBBox::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  return true;
}

void HeaderBBox::Swap(HeaderBBox* other) {
  if (other == this) return;
  InternalSwap(other);
}
void HeaderBBox::InternalSwap(HeaderBBox* other) {
  std::swap(left_, other->left_);
  std::swap(right_, other->right_);
  std::swap(top_, other->top_);
  std::swap(bottom_, other->bottom_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata HeaderBBox::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = HeaderBBox_descriptor_;
  metadata.reflection = HeaderBBox_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// HeaderBBox

// required sint64 left = 1;
bool HeaderBBox::has_left() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void HeaderBBox::set_has_left() {
  _has_bits_[0] |= 0x00000001u;
}
void HeaderBBox::clear_has_left() {
  _has_bits_[0] &= ~0x00000001u;
}
void HeaderBBox::clear_left() {
  left_ = GOOGLE_LONGLONG(0);
  clear_has_left();
}
 ::google::protobuf::int64 HeaderBBox::left() const {
  // @@protoc_insertion_point(field_get:PBF.HeaderBBox.left)
  return left_;
}
 void HeaderBBox::set_left(::google::protobuf::int64 value) {
  set_has_left();
  left_ = value;
  // @@protoc_insertion_point(field_set:PBF.HeaderBBox.left)
}

// required sint64 right = 2;
bool HeaderBBox::has_right() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void HeaderBBox::set_has_right() {
  _has_bits_[0] |= 0x00000002u;
}
void HeaderBBox::clear_has_right() {
  _has_bits_[0] &= ~0x00000002u;
}
void HeaderBBox::clear_right() {
  right_ = GOOGLE_LONGLONG(0);
  clear_has_right();
}
 ::google::protobuf::int64 HeaderBBox::right() const {
  // @@protoc_insertion_point(field_get:PBF.HeaderBBox.right)
  return right_;
}
 void HeaderBBox::set_right(::google::protobuf::int64 value) {
  set_has_right();
  right_ = value;
  // @@protoc_insertion_point(field_set:PBF.HeaderBBox.right)
}

// required sint64 top = 3;
bool HeaderBBox::has_top() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void HeaderBBox::set_has_top() {
  _has_bits_[0] |= 0x00000004u;
}
void HeaderBBox::clear_has_top() {
  _has_bits_[0] &= ~0x00000004u;
}
void HeaderBBox::clear_top() {
  top_ = GOOGLE_LONGLONG(0);
  clear_has_top();
}
 ::google::protobuf::int64 HeaderBBox::top() const {
  // @@protoc_insertion_point(field_get:PBF.HeaderBBox.top)
  return top_;
}
 void HeaderBBox::set_top(::google::protobuf::int64 value) {
  set_has_top();
  top_ = value;
  // @@protoc_insertion_point(field_set:PBF.HeaderBBox.top)
}

// required sint64 bottom = 4;
bool HeaderBBox::has_bottom() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void HeaderBBox::set_has_bottom() {
  _has_bits_[0] |= 0x00000008u;
}
void HeaderBBox::clear_has_bottom() {
  _has_bits_[0] &= ~0x00000008u;
}
void HeaderBBox::clear_bottom() {
  bottom_ = GOOGLE_LONGLONG(0);
  clear_has_bottom();
}
 ::google::protobuf::int64 HeaderBBox::bottom() const {
  // @@protoc_insertion_point(field_get:PBF.HeaderBBox.bottom)
  return bottom_;
}
 void HeaderBBox::set_bottom(::google::protobuf::int64 value) {
  set_has_bottom();
  bottom_ = value;
  // @@protoc_insertion_point(field_set:PBF.HeaderBBox.bottom)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrimitiveBlock::kStringtableFieldNumber;
const int PrimitiveBlock::kPrimitivegroupFieldNumber;
const int PrimitiveBlock::kGranularityFieldNumber;
const int PrimitiveBlock::kLatOffsetFieldNumber;
const int PrimitiveBlock::kLonOffsetFieldNumber;
const int PrimitiveBlock::kDateGranularityFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrimitiveBlock::PrimitiveBlock()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.PrimitiveBlock)
}

void PrimitiveBlock::InitAsDefaultInstance() {
  stringtable_ = const_cast< ::PBF::StringTable*>(&::PBF::StringTable::default_instance());
}

PrimitiveBlock::PrimitiveBlock(const PrimitiveBlock& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.PrimitiveBlock)
}

void PrimitiveBlock::SharedCtor() {
  _cached_size_ = 0;
  stringtable_ = NULL;
  granularity_ = 100;
  lat_offset_ = GOOGLE_LONGLONG(0);
  lon_offset_ = GOOGLE_LONGLONG(0);
  date_granularity_ = 1000;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrimitiveBlock::~PrimitiveBlock() {
  // @@protoc_insertion_point(destructor:PBF.PrimitiveBlock)
  SharedDtor();
}

void PrimitiveBlock::SharedDtor() {
  if (this != default_instance_) {
    delete stringtable_;
  }
}

void PrimitiveBlock::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrimitiveBlock::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrimitiveBlock_descriptor_;
}

const PrimitiveBlock& PrimitiveBlock::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

PrimitiveBlock* PrimitiveBlock::default_instance_ = NULL;

PrimitiveBlock* PrimitiveBlock::New(::google::protobuf::Arena* arena) const {
  PrimitiveBlock* n = new PrimitiveBlock;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrimitiveBlock::Clear() {
  if (_has_bits_[0 / 32] & 61u) {
    if (has_stringtable()) {
      if (stringtable_ != NULL) stringtable_->::PBF::StringTable::Clear();
    }
    granularity_ = 100;
    lat_offset_ = GOOGLE_LONGLONG(0);
    lon_offset_ = GOOGLE_LONGLONG(0);
    date_granularity_ = 1000;
  }
  primitivegroup_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PrimitiveBlock::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.PrimitiveBlock)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(16383);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .PBF.StringTable stringtable = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_stringtable()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_primitivegroup;
        break;
      }

      // repeated .PBF.PrimitiveGroup primitivegroup = 2;
      case 2: {
        if (tag == 18) {
         parse_primitivegroup:
          DO_(input->IncrementRecursionDepth());
         parse_loop_primitivegroup:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_primitivegroup()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_loop_primitivegroup;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(136)) goto parse_granularity;
        break;
      }

      // optional int32 granularity = 17 [default = 100];
      case 17: {
        if (tag == 136) {
         parse_granularity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &granularity_)));
          set_has_granularity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(144)) goto parse_date_granularity;
        break;
      }

      // optional int32 date_granularity = 18 [default = 1000];
      case 18: {
        if (tag == 144) {
         parse_date_granularity:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &date_granularity_)));
          set_has_date_granularity();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(152)) goto parse_lat_offset;
        break;
      }

      // optional int64 lat_offset = 19 [default = 0];
      case 19: {
        if (tag == 152) {
         parse_lat_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lat_offset_)));
          set_has_lat_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(160)) goto parse_lon_offset;
        break;
      }

      // optional int64 lon_offset = 20 [default = 0];
      case 20: {
        if (tag == 160) {
         parse_lon_offset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &lon_offset_)));
          set_has_lon_offset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.PrimitiveBlock)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.PrimitiveBlock)
  return false;
#undef DO_
}

void PrimitiveBlock::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.PrimitiveBlock)
  // required .PBF.StringTable stringtable = 1;
  if (has_stringtable()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, *this->stringtable_, output);
  }

  // repeated .PBF.PrimitiveGroup primitivegroup = 2;
  for (unsigned int i = 0, n = this->primitivegroup_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->primitivegroup(i), output);
  }

  // optional int32 granularity = 17 [default = 100];
  if (has_granularity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(17, this->granularity(), output);
  }

  // optional int32 date_granularity = 18 [default = 1000];
  if (has_date_granularity()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(18, this->date_granularity(), output);
  }

  // optional int64 lat_offset = 19 [default = 0];
  if (has_lat_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(19, this->lat_offset(), output);
  }

  // optional int64 lon_offset = 20 [default = 0];
  if (has_lon_offset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(20, this->lon_offset(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.PrimitiveBlock)
}

::google::protobuf::uint8* PrimitiveBlock::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.PrimitiveBlock)
  // required .PBF.StringTable stringtable = 1;
  if (has_stringtable()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, *this->stringtable_, target);
  }

  // repeated .PBF.PrimitiveGroup primitivegroup = 2;
  for (unsigned int i = 0, n = this->primitivegroup_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->primitivegroup(i), target);
  }

  // optional int32 granularity = 17 [default = 100];
  if (has_granularity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(17, this->granularity(), target);
  }

  // optional int32 date_granularity = 18 [default = 1000];
  if (has_date_granularity()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(18, this->date_granularity(), target);
  }

  // optional int64 lat_offset = 19 [default = 0];
  if (has_lat_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(19, this->lat_offset(), target);
  }

  // optional int64 lon_offset = 20 [default = 0];
  if (has_lon_offset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(20, this->lon_offset(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.PrimitiveBlock)
  return target;
}

int PrimitiveBlock::ByteSize() const {
  int total_size = 0;

  // required .PBF.StringTable stringtable = 1;
  if (has_stringtable()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->stringtable_);
  }
  if (_has_bits_[2 / 32] & 60u) {
    // optional int32 granularity = 17 [default = 100];
    if (has_granularity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->granularity());
    }

    // optional int64 lat_offset = 19 [default = 0];
    if (has_lat_offset()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lat_offset());
    }

    // optional int64 lon_offset = 20 [default = 0];
    if (has_lon_offset()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->lon_offset());
    }

    // optional int32 date_granularity = 18 [default = 1000];
    if (has_date_granularity()) {
      total_size += 2 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->date_granularity());
    }

  }
  // repeated .PBF.PrimitiveGroup primitivegroup = 2;
  total_size += 1 * this->primitivegroup_size();
  for (int i = 0; i < this->primitivegroup_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->primitivegroup(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrimitiveBlock::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PrimitiveBlock* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PrimitiveBlock>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PrimitiveBlock::MergeFrom(const PrimitiveBlock& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  primitivegroup_.MergeFrom(from.primitivegroup_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_stringtable()) {
      mutable_stringtable()->::PBF::StringTable::MergeFrom(from.stringtable());
    }
    if (from.has_granularity()) {
      set_granularity(from.granularity());
    }
    if (from.has_lat_offset()) {
      set_lat_offset(from.lat_offset());
    }
    if (from.has_lon_offset()) {
      set_lon_offset(from.lon_offset());
    }
    if (from.has_date_granularity()) {
      set_date_granularity(from.date_granularity());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PrimitiveBlock::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrimitiveBlock::CopyFrom(const PrimitiveBlock& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimitiveBlock::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (!::google::protobuf::internal::AllAreInitialized(this->primitivegroup())) return false;
  return true;
}

void PrimitiveBlock::Swap(PrimitiveBlock* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrimitiveBlock::InternalSwap(PrimitiveBlock* other) {
  std::swap(stringtable_, other->stringtable_);
  primitivegroup_.UnsafeArenaSwap(&other->primitivegroup_);
  std::swap(granularity_, other->granularity_);
  std::swap(lat_offset_, other->lat_offset_);
  std::swap(lon_offset_, other->lon_offset_);
  std::swap(date_granularity_, other->date_granularity_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrimitiveBlock::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrimitiveBlock_descriptor_;
  metadata.reflection = PrimitiveBlock_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrimitiveBlock

// required .PBF.StringTable stringtable = 1;
bool PrimitiveBlock::has_stringtable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void PrimitiveBlock::set_has_stringtable() {
  _has_bits_[0] |= 0x00000001u;
}
void PrimitiveBlock::clear_has_stringtable() {
  _has_bits_[0] &= ~0x00000001u;
}
void PrimitiveBlock::clear_stringtable() {
  if (stringtable_ != NULL) stringtable_->::PBF::StringTable::Clear();
  clear_has_stringtable();
}
const ::PBF::StringTable& PrimitiveBlock::stringtable() const {
  // @@protoc_insertion_point(field_get:PBF.PrimitiveBlock.stringtable)
  return stringtable_ != NULL ? *stringtable_ : *default_instance_->stringtable_;
}
::PBF::StringTable* PrimitiveBlock::mutable_stringtable() {
  set_has_stringtable();
  if (stringtable_ == NULL) {
    stringtable_ = new ::PBF::StringTable;
  }
  // @@protoc_insertion_point(field_mutable:PBF.PrimitiveBlock.stringtable)
  return stringtable_;
}
::PBF::StringTable* PrimitiveBlock::release_stringtable() {
  clear_has_stringtable();
  ::PBF::StringTable* temp = stringtable_;
  stringtable_ = NULL;
  return temp;
}
void PrimitiveBlock::set_allocated_stringtable(::PBF::StringTable* stringtable) {
  delete stringtable_;
  stringtable_ = stringtable;
  if (stringtable) {
    set_has_stringtable();
  } else {
    clear_has_stringtable();
  }
  // @@protoc_insertion_point(field_set_allocated:PBF.PrimitiveBlock.stringtable)
}

// repeated .PBF.PrimitiveGroup primitivegroup = 2;
int PrimitiveBlock::primitivegroup_size() const {
  return primitivegroup_.size();
}
void PrimitiveBlock::clear_primitivegroup() {
  primitivegroup_.Clear();
}
const ::PBF::PrimitiveGroup& PrimitiveBlock::primitivegroup(int index) const {
  // @@protoc_insertion_point(field_get:PBF.PrimitiveBlock.primitivegroup)
  return primitivegroup_.Get(index);
}
::PBF::PrimitiveGroup* PrimitiveBlock::mutable_primitivegroup(int index) {
  // @@protoc_insertion_point(field_mutable:PBF.PrimitiveBlock.primitivegroup)
  return primitivegroup_.Mutable(index);
}
::PBF::PrimitiveGroup* PrimitiveBlock::add_primitivegroup() {
  // @@protoc_insertion_point(field_add:PBF.PrimitiveBlock.primitivegroup)
  return primitivegroup_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBF::PrimitiveGroup >*
PrimitiveBlock::mutable_primitivegroup() {
  // @@protoc_insertion_point(field_mutable_list:PBF.PrimitiveBlock.primitivegroup)
  return &primitivegroup_;
}
const ::google::protobuf::RepeatedPtrField< ::PBF::PrimitiveGroup >&
PrimitiveBlock::primitivegroup() const {
  // @@protoc_insertion_point(field_list:PBF.PrimitiveBlock.primitivegroup)
  return primitivegroup_;
}

// optional int32 granularity = 17 [default = 100];
bool PrimitiveBlock::has_granularity() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void PrimitiveBlock::set_has_granularity() {
  _has_bits_[0] |= 0x00000004u;
}
void PrimitiveBlock::clear_has_granularity() {
  _has_bits_[0] &= ~0x00000004u;
}
void PrimitiveBlock::clear_granularity() {
  granularity_ = 100;
  clear_has_granularity();
}
 ::google::protobuf::int32 PrimitiveBlock::granularity() const {
  // @@protoc_insertion_point(field_get:PBF.PrimitiveBlock.granularity)
  return granularity_;
}
 void PrimitiveBlock::set_granularity(::google::protobuf::int32 value) {
  set_has_granularity();
  granularity_ = value;
  // @@protoc_insertion_point(field_set:PBF.PrimitiveBlock.granularity)
}

// optional int64 lat_offset = 19 [default = 0];
bool PrimitiveBlock::has_lat_offset() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void PrimitiveBlock::set_has_lat_offset() {
  _has_bits_[0] |= 0x00000008u;
}
void PrimitiveBlock::clear_has_lat_offset() {
  _has_bits_[0] &= ~0x00000008u;
}
void PrimitiveBlock::clear_lat_offset() {
  lat_offset_ = GOOGLE_LONGLONG(0);
  clear_has_lat_offset();
}
 ::google::protobuf::int64 PrimitiveBlock::lat_offset() const {
  // @@protoc_insertion_point(field_get:PBF.PrimitiveBlock.lat_offset)
  return lat_offset_;
}
 void PrimitiveBlock::set_lat_offset(::google::protobuf::int64 value) {
  set_has_lat_offset();
  lat_offset_ = value;
  // @@protoc_insertion_point(field_set:PBF.PrimitiveBlock.lat_offset)
}

// optional int64 lon_offset = 20 [default = 0];
bool PrimitiveBlock::has_lon_offset() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void PrimitiveBlock::set_has_lon_offset() {
  _has_bits_[0] |= 0x00000010u;
}
void PrimitiveBlock::clear_has_lon_offset() {
  _has_bits_[0] &= ~0x00000010u;
}
void PrimitiveBlock::clear_lon_offset() {
  lon_offset_ = GOOGLE_LONGLONG(0);
  clear_has_lon_offset();
}
 ::google::protobuf::int64 PrimitiveBlock::lon_offset() const {
  // @@protoc_insertion_point(field_get:PBF.PrimitiveBlock.lon_offset)
  return lon_offset_;
}
 void PrimitiveBlock::set_lon_offset(::google::protobuf::int64 value) {
  set_has_lon_offset();
  lon_offset_ = value;
  // @@protoc_insertion_point(field_set:PBF.PrimitiveBlock.lon_offset)
}

// optional int32 date_granularity = 18 [default = 1000];
bool PrimitiveBlock::has_date_granularity() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void PrimitiveBlock::set_has_date_granularity() {
  _has_bits_[0] |= 0x00000020u;
}
void PrimitiveBlock::clear_has_date_granularity() {
  _has_bits_[0] &= ~0x00000020u;
}
void PrimitiveBlock::clear_date_granularity() {
  date_granularity_ = 1000;
  clear_has_date_granularity();
}
 ::google::protobuf::int32 PrimitiveBlock::date_granularity() const {
  // @@protoc_insertion_point(field_get:PBF.PrimitiveBlock.date_granularity)
  return date_granularity_;
}
 void PrimitiveBlock::set_date_granularity(::google::protobuf::int32 value) {
  set_has_date_granularity();
  date_granularity_ = value;
  // @@protoc_insertion_point(field_set:PBF.PrimitiveBlock.date_granularity)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int PrimitiveGroup::kNodesFieldNumber;
const int PrimitiveGroup::kDenseFieldNumber;
const int PrimitiveGroup::kWaysFieldNumber;
const int PrimitiveGroup::kRelationsFieldNumber;
const int PrimitiveGroup::kChangesetsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

PrimitiveGroup::PrimitiveGroup()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.PrimitiveGroup)
}

void PrimitiveGroup::InitAsDefaultInstance() {
  dense_ = const_cast< ::PBF::DenseNodes*>(&::PBF::DenseNodes::default_instance());
}

PrimitiveGroup::PrimitiveGroup(const PrimitiveGroup& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.PrimitiveGroup)
}

void PrimitiveGroup::SharedCtor() {
  _cached_size_ = 0;
  dense_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

PrimitiveGroup::~PrimitiveGroup() {
  // @@protoc_insertion_point(destructor:PBF.PrimitiveGroup)
  SharedDtor();
}

void PrimitiveGroup::SharedDtor() {
  if (this != default_instance_) {
    delete dense_;
  }
}

void PrimitiveGroup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* PrimitiveGroup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return PrimitiveGroup_descriptor_;
}

const PrimitiveGroup& PrimitiveGroup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

PrimitiveGroup* PrimitiveGroup::default_instance_ = NULL;

PrimitiveGroup* PrimitiveGroup::New(::google::protobuf::Arena* arena) const {
  PrimitiveGroup* n = new PrimitiveGroup;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void PrimitiveGroup::Clear() {
  if (has_dense()) {
    if (dense_ != NULL) dense_->::PBF::DenseNodes::Clear();
  }
  nodes_.Clear();
  ways_.Clear();
  relations_.Clear();
  changesets_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool PrimitiveGroup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.PrimitiveGroup)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .PBF.Node nodes = 1;
      case 1: {
        if (tag == 10) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_nodes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_nodes()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_loop_nodes;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectTag(18)) goto parse_dense;
        break;
      }

      // optional .PBF.DenseNodes dense = 2;
      case 2: {
        if (tag == 18) {
         parse_dense:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_dense()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_ways;
        break;
      }

      // repeated .PBF.Way ways = 3;
      case 3: {
        if (tag == 26) {
         parse_ways:
          DO_(input->IncrementRecursionDepth());
         parse_loop_ways:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_ways()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_loop_ways;
        if (input->ExpectTag(34)) goto parse_loop_relations;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .PBF.Relation relations = 4;
      case 4: {
        if (tag == 34) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_relations:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_relations()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_loop_relations;
        if (input->ExpectTag(42)) goto parse_loop_changesets;
        input->UnsafeDecrementRecursionDepth();
        break;
      }

      // repeated .PBF.ChangeSet changesets = 5;
      case 5: {
        if (tag == 42) {
          DO_(input->IncrementRecursionDepth());
         parse_loop_changesets:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtualNoRecursionDepth(
                input, add_changesets()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_loop_changesets;
        input->UnsafeDecrementRecursionDepth();
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.PrimitiveGroup)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.PrimitiveGroup)
  return false;
#undef DO_
}

void PrimitiveGroup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.PrimitiveGroup)
  // repeated .PBF.Node nodes = 1;
  for (unsigned int i = 0, n = this->nodes_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->nodes(i), output);
  }

  // optional .PBF.DenseNodes dense = 2;
  if (has_dense()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, *this->dense_, output);
  }

  // repeated .PBF.Way ways = 3;
  for (unsigned int i = 0, n = this->ways_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->ways(i), output);
  }

  // repeated .PBF.Relation relations = 4;
  for (unsigned int i = 0, n = this->relations_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->relations(i), output);
  }

  // repeated .PBF.ChangeSet changesets = 5;
  for (unsigned int i = 0, n = this->changesets_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->changesets(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.PrimitiveGroup)
}

::google::protobuf::uint8* PrimitiveGroup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.PrimitiveGroup)
  // repeated .PBF.Node nodes = 1;
  for (unsigned int i = 0, n = this->nodes_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->nodes(i), target);
  }

  // optional .PBF.DenseNodes dense = 2;
  if (has_dense()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, *this->dense_, target);
  }

  // repeated .PBF.Way ways = 3;
  for (unsigned int i = 0, n = this->ways_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->ways(i), target);
  }

  // repeated .PBF.Relation relations = 4;
  for (unsigned int i = 0, n = this->relations_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->relations(i), target);
  }

  // repeated .PBF.ChangeSet changesets = 5;
  for (unsigned int i = 0, n = this->changesets_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->changesets(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.PrimitiveGroup)
  return target;
}

int PrimitiveGroup::ByteSize() const {
  int total_size = 0;

  // optional .PBF.DenseNodes dense = 2;
  if (has_dense()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->dense_);
  }

  // repeated .PBF.Node nodes = 1;
  total_size += 1 * this->nodes_size();
  for (int i = 0; i < this->nodes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->nodes(i));
  }

  // repeated .PBF.Way ways = 3;
  total_size += 1 * this->ways_size();
  for (int i = 0; i < this->ways_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->ways(i));
  }

  // repeated .PBF.Relation relations = 4;
  total_size += 1 * this->relations_size();
  for (int i = 0; i < this->relations_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->relations(i));
  }

  // repeated .PBF.ChangeSet changesets = 5;
  total_size += 1 * this->changesets_size();
  for (int i = 0; i < this->changesets_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->changesets(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void PrimitiveGroup::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const PrimitiveGroup* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const PrimitiveGroup>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void PrimitiveGroup::MergeFrom(const PrimitiveGroup& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  nodes_.MergeFrom(from.nodes_);
  ways_.MergeFrom(from.ways_);
  relations_.MergeFrom(from.relations_);
  changesets_.MergeFrom(from.changesets_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_dense()) {
      mutable_dense()->::PBF::DenseNodes::MergeFrom(from.dense());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void PrimitiveGroup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void PrimitiveGroup::CopyFrom(const PrimitiveGroup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool PrimitiveGroup::IsInitialized() const {

  if (!::google::protobuf::internal::AllAreInitialized(this->nodes())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->ways())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->relations())) return false;
  if (!::google::protobuf::internal::AllAreInitialized(this->changesets())) return false;
  return true;
}

void PrimitiveGroup::Swap(PrimitiveGroup* other) {
  if (other == this) return;
  InternalSwap(other);
}
void PrimitiveGroup::InternalSwap(PrimitiveGroup* other) {
  nodes_.UnsafeArenaSwap(&other->nodes_);
  std::swap(dense_, other->dense_);
  ways_.UnsafeArenaSwap(&other->ways_);
  relations_.UnsafeArenaSwap(&other->relations_);
  changesets_.UnsafeArenaSwap(&other->changesets_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata PrimitiveGroup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = PrimitiveGroup_descriptor_;
  metadata.reflection = PrimitiveGroup_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// PrimitiveGroup

// repeated .PBF.Node nodes = 1;
int PrimitiveGroup::nodes_size() const {
  return nodes_.size();
}
void PrimitiveGroup::clear_nodes() {
  nodes_.Clear();
}
const ::PBF::Node& PrimitiveGroup::nodes(int index) const {
  // @@protoc_insertion_point(field_get:PBF.PrimitiveGroup.nodes)
  return nodes_.Get(index);
}
::PBF::Node* PrimitiveGroup::mutable_nodes(int index) {
  // @@protoc_insertion_point(field_mutable:PBF.PrimitiveGroup.nodes)
  return nodes_.Mutable(index);
}
::PBF::Node* PrimitiveGroup::add_nodes() {
  // @@protoc_insertion_point(field_add:PBF.PrimitiveGroup.nodes)
  return nodes_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBF::Node >*
PrimitiveGroup::mutable_nodes() {
  // @@protoc_insertion_point(field_mutable_list:PBF.PrimitiveGroup.nodes)
  return &nodes_;
}
const ::google::protobuf::RepeatedPtrField< ::PBF::Node >&
PrimitiveGroup::nodes() const {
  // @@protoc_insertion_point(field_list:PBF.PrimitiveGroup.nodes)
  return nodes_;
}

// optional .PBF.DenseNodes dense = 2;
bool PrimitiveGroup::has_dense() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void PrimitiveGroup::set_has_dense() {
  _has_bits_[0] |= 0x00000002u;
}
void PrimitiveGroup::clear_has_dense() {
  _has_bits_[0] &= ~0x00000002u;
}
void PrimitiveGroup::clear_dense() {
  if (dense_ != NULL) dense_->::PBF::DenseNodes::Clear();
  clear_has_dense();
}
const ::PBF::DenseNodes& PrimitiveGroup::dense() const {
  // @@protoc_insertion_point(field_get:PBF.PrimitiveGroup.dense)
  return dense_ != NULL ? *dense_ : *default_instance_->dense_;
}
::PBF::DenseNodes* PrimitiveGroup::mutable_dense() {
  set_has_dense();
  if (dense_ == NULL) {
    dense_ = new ::PBF::DenseNodes;
  }
  // @@protoc_insertion_point(field_mutable:PBF.PrimitiveGroup.dense)
  return dense_;
}
::PBF::DenseNodes* PrimitiveGroup::release_dense() {
  clear_has_dense();
  ::PBF::DenseNodes* temp = dense_;
  dense_ = NULL;
  return temp;
}
void PrimitiveGroup::set_allocated_dense(::PBF::DenseNodes* dense) {
  delete dense_;
  dense_ = dense;
  if (dense) {
    set_has_dense();
  } else {
    clear_has_dense();
  }
  // @@protoc_insertion_point(field_set_allocated:PBF.PrimitiveGroup.dense)
}

// repeated .PBF.Way ways = 3;
int PrimitiveGroup::ways_size() const {
  return ways_.size();
}
void PrimitiveGroup::clear_ways() {
  ways_.Clear();
}
const ::PBF::Way& PrimitiveGroup::ways(int index) const {
  // @@protoc_insertion_point(field_get:PBF.PrimitiveGroup.ways)
  return ways_.Get(index);
}
::PBF::Way* PrimitiveGroup::mutable_ways(int index) {
  // @@protoc_insertion_point(field_mutable:PBF.PrimitiveGroup.ways)
  return ways_.Mutable(index);
}
::PBF::Way* PrimitiveGroup::add_ways() {
  // @@protoc_insertion_point(field_add:PBF.PrimitiveGroup.ways)
  return ways_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBF::Way >*
PrimitiveGroup::mutable_ways() {
  // @@protoc_insertion_point(field_mutable_list:PBF.PrimitiveGroup.ways)
  return &ways_;
}
const ::google::protobuf::RepeatedPtrField< ::PBF::Way >&
PrimitiveGroup::ways() const {
  // @@protoc_insertion_point(field_list:PBF.PrimitiveGroup.ways)
  return ways_;
}

// repeated .PBF.Relation relations = 4;
int PrimitiveGroup::relations_size() const {
  return relations_.size();
}
void PrimitiveGroup::clear_relations() {
  relations_.Clear();
}
const ::PBF::Relation& PrimitiveGroup::relations(int index) const {
  // @@protoc_insertion_point(field_get:PBF.PrimitiveGroup.relations)
  return relations_.Get(index);
}
::PBF::Relation* PrimitiveGroup::mutable_relations(int index) {
  // @@protoc_insertion_point(field_mutable:PBF.PrimitiveGroup.relations)
  return relations_.Mutable(index);
}
::PBF::Relation* PrimitiveGroup::add_relations() {
  // @@protoc_insertion_point(field_add:PBF.PrimitiveGroup.relations)
  return relations_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBF::Relation >*
PrimitiveGroup::mutable_relations() {
  // @@protoc_insertion_point(field_mutable_list:PBF.PrimitiveGroup.relations)
  return &relations_;
}
const ::google::protobuf::RepeatedPtrField< ::PBF::Relation >&
PrimitiveGroup::relations() const {
  // @@protoc_insertion_point(field_list:PBF.PrimitiveGroup.relations)
  return relations_;
}

// repeated .PBF.ChangeSet changesets = 5;
int PrimitiveGroup::changesets_size() const {
  return changesets_.size();
}
void PrimitiveGroup::clear_changesets() {
  changesets_.Clear();
}
const ::PBF::ChangeSet& PrimitiveGroup::changesets(int index) const {
  // @@protoc_insertion_point(field_get:PBF.PrimitiveGroup.changesets)
  return changesets_.Get(index);
}
::PBF::ChangeSet* PrimitiveGroup::mutable_changesets(int index) {
  // @@protoc_insertion_point(field_mutable:PBF.PrimitiveGroup.changesets)
  return changesets_.Mutable(index);
}
::PBF::ChangeSet* PrimitiveGroup::add_changesets() {
  // @@protoc_insertion_point(field_add:PBF.PrimitiveGroup.changesets)
  return changesets_.Add();
}
::google::protobuf::RepeatedPtrField< ::PBF::ChangeSet >*
PrimitiveGroup::mutable_changesets() {
  // @@protoc_insertion_point(field_mutable_list:PBF.PrimitiveGroup.changesets)
  return &changesets_;
}
const ::google::protobuf::RepeatedPtrField< ::PBF::ChangeSet >&
PrimitiveGroup::changesets() const {
  // @@protoc_insertion_point(field_list:PBF.PrimitiveGroup.changesets)
  return changesets_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringTable::kSFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringTable::StringTable()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.StringTable)
}

void StringTable::InitAsDefaultInstance() {
}

StringTable::StringTable(const StringTable& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.StringTable)
}

void StringTable::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

StringTable::~StringTable() {
  // @@protoc_insertion_point(destructor:PBF.StringTable)
  SharedDtor();
}

void StringTable::SharedDtor() {
  if (this != default_instance_) {
  }
}

void StringTable::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringTable::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return StringTable_descriptor_;
}

const StringTable& StringTable::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

StringTable* StringTable::default_instance_ = NULL;

StringTable* StringTable::New(::google::protobuf::Arena* arena) const {
  StringTable* n = new StringTable;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void StringTable::Clear() {
  s_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool StringTable::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.StringTable)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated bytes s = 1;
      case 1: {
        if (tag == 10) {
         parse_s:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->add_s()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(10)) goto parse_s;
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.StringTable)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.StringTable)
  return false;
#undef DO_
}

void StringTable::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.StringTable)
  // repeated bytes s = 1;
  for (int i = 0; i < this->s_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->s(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.StringTable)
}

::google::protobuf::uint8* StringTable::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.StringTable)
  // repeated bytes s = 1;
  for (int i = 0; i < this->s_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteBytesToArray(1, this->s(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.StringTable)
  return target;
}

int StringTable::ByteSize() const {
  int total_size = 0;

  // repeated bytes s = 1;
  total_size += 1 * this->s_size();
  for (int i = 0; i < this->s_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(
      this->s(i));
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void StringTable::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const StringTable* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const StringTable>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void StringTable::MergeFrom(const StringTable& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  s_.MergeFrom(from.s_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void StringTable::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void StringTable::CopyFrom(const StringTable& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool StringTable::IsInitialized() const {

  return true;
}

void StringTable::Swap(StringTable* other) {
  if (other == this) return;
  InternalSwap(other);
}
void StringTable::InternalSwap(StringTable* other) {
  s_.UnsafeArenaSwap(&other->s_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringTable::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = StringTable_descriptor_;
  metadata.reflection = StringTable_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringTable

// repeated bytes s = 1;
int StringTable::s_size() const {
  return s_.size();
}
void StringTable::clear_s() {
  s_.Clear();
}
 const ::std::string& StringTable::s(int index) const {
  // @@protoc_insertion_point(field_get:PBF.StringTable.s)
  return s_.Get(index);
}
 ::std::string* StringTable::mutable_s(int index) {
  // @@protoc_insertion_point(field_mutable:PBF.StringTable.s)
  return s_.Mutable(index);
}
 void StringTable::set_s(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:PBF.StringTable.s)
  s_.Mutable(index)->assign(value);
}
 void StringTable::set_s(int index, const char* value) {
  s_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:PBF.StringTable.s)
}
 void StringTable::set_s(int index, const void* value, size_t size) {
  s_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:PBF.StringTable.s)
}
 ::std::string* StringTable::add_s() {
  return s_.Add();
}
 void StringTable::add_s(const ::std::string& value) {
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:PBF.StringTable.s)
}
 void StringTable::add_s(const char* value) {
  s_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:PBF.StringTable.s)
}
 void StringTable::add_s(const void* value, size_t size) {
  s_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:PBF.StringTable.s)
}
 const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringTable::s() const {
  // @@protoc_insertion_point(field_list:PBF.StringTable.s)
  return s_;
}
 ::google::protobuf::RepeatedPtrField< ::std::string>*
StringTable::mutable_s() {
  // @@protoc_insertion_point(field_mutable_list:PBF.StringTable.s)
  return &s_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Info::kVersionFieldNumber;
const int Info::kTimestampFieldNumber;
const int Info::kChangesetFieldNumber;
const int Info::kUidFieldNumber;
const int Info::kUserSidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Info::Info()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.Info)
}

void Info::InitAsDefaultInstance() {
}

Info::Info(const Info& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.Info)
}

void Info::SharedCtor() {
  _cached_size_ = 0;
  version_ = -1;
  timestamp_ = GOOGLE_LONGLONG(0);
  changeset_ = GOOGLE_LONGLONG(0);
  uid_ = 0;
  user_sid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Info::~Info() {
  // @@protoc_insertion_point(destructor:PBF.Info)
  SharedDtor();
}

void Info::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Info::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Info::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Info_descriptor_;
}

const Info& Info::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

Info* Info::default_instance_ = NULL;

Info* Info::New(::google::protobuf::Arena* arena) const {
  Info* n = new Info;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Info::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Info*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 31u) {
    ZR_(uid_, user_sid_);
    version_ = -1;
    timestamp_ = GOOGLE_LONGLONG(0);
  }

#undef ZR_HELPER_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Info::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.Info)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 version = 1 [default = -1];
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &version_)));
          set_has_version();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(16)) goto parse_timestamp;
        break;
      }

      // optional int64 timestamp = 2;
      case 2: {
        if (tag == 16) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &timestamp_)));
          set_has_timestamp();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(24)) goto parse_changeset;
        break;
      }

      // optional int64 changeset = 3;
      case 3: {
        if (tag == 24) {
         parse_changeset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &changeset_)));
          set_has_changeset();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(32)) goto parse_uid;
        break;
      }

      // optional int32 uid = 4;
      case 4: {
        if (tag == 32) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &uid_)));
          set_has_uid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_user_sid;
        break;
      }

      // optional int32 user_sid = 5;
      case 5: {
        if (tag == 40) {
         parse_user_sid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &user_sid_)));
          set_has_user_sid();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.Info)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.Info)
  return false;
#undef DO_
}

void Info::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.Info)
  // optional int32 version = 1 [default = -1];
  if (has_version()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->version(), output);
  }

  // optional int64 timestamp = 2;
  if (has_timestamp()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(2, this->timestamp(), output);
  }

  // optional int64 changeset = 3;
  if (has_changeset()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(3, this->changeset(), output);
  }

  // optional int32 uid = 4;
  if (has_uid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->uid(), output);
  }

  // optional int32 user_sid = 5;
  if (has_user_sid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->user_sid(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.Info)
}

::google::protobuf::uint8* Info::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.Info)
  // optional int32 version = 1 [default = -1];
  if (has_version()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->version(), target);
  }

  // optional int64 timestamp = 2;
  if (has_timestamp()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(2, this->timestamp(), target);
  }

  // optional int64 changeset = 3;
  if (has_changeset()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(3, this->changeset(), target);
  }

  // optional int32 uid = 4;
  if (has_uid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->uid(), target);
  }

  // optional int32 user_sid = 5;
  if (has_user_sid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->user_sid(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.Info)
  return target;
}

int Info::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & 31u) {
    // optional int32 version = 1 [default = -1];
    if (has_version()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->version());
    }

    // optional int64 timestamp = 2;
    if (has_timestamp()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->timestamp());
    }

    // optional int64 changeset = 3;
    if (has_changeset()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int64Size(
          this->changeset());
    }

    // optional int32 uid = 4;
    if (has_uid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->uid());
    }

    // optional int32 user_sid = 5;
    if (has_user_sid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->user_sid());
    }

  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Info::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Info* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Info>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Info::MergeFrom(const Info& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_version()) {
      set_version(from.version());
    }
    if (from.has_timestamp()) {
      set_timestamp(from.timestamp());
    }
    if (from.has_changeset()) {
      set_changeset(from.changeset());
    }
    if (from.has_uid()) {
      set_uid(from.uid());
    }
    if (from.has_user_sid()) {
      set_user_sid(from.user_sid());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Info::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Info::CopyFrom(const Info& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Info::IsInitialized() const {

  return true;
}

void Info::Swap(Info* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Info::InternalSwap(Info* other) {
  std::swap(version_, other->version_);
  std::swap(timestamp_, other->timestamp_);
  std::swap(changeset_, other->changeset_);
  std::swap(uid_, other->uid_);
  std::swap(user_sid_, other->user_sid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Info::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Info_descriptor_;
  metadata.reflection = Info_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Info

// optional int32 version = 1 [default = -1];
bool Info::has_version() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Info::set_has_version() {
  _has_bits_[0] |= 0x00000001u;
}
void Info::clear_has_version() {
  _has_bits_[0] &= ~0x00000001u;
}
void Info::clear_version() {
  version_ = -1;
  clear_has_version();
}
 ::google::protobuf::int32 Info::version() const {
  // @@protoc_insertion_point(field_get:PBF.Info.version)
  return version_;
}
 void Info::set_version(::google::protobuf::int32 value) {
  set_has_version();
  version_ = value;
  // @@protoc_insertion_point(field_set:PBF.Info.version)
}

// optional int64 timestamp = 2;
bool Info::has_timestamp() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void Info::set_has_timestamp() {
  _has_bits_[0] |= 0x00000002u;
}
void Info::clear_has_timestamp() {
  _has_bits_[0] &= ~0x00000002u;
}
void Info::clear_timestamp() {
  timestamp_ = GOOGLE_LONGLONG(0);
  clear_has_timestamp();
}
 ::google::protobuf::int64 Info::timestamp() const {
  // @@protoc_insertion_point(field_get:PBF.Info.timestamp)
  return timestamp_;
}
 void Info::set_timestamp(::google::protobuf::int64 value) {
  set_has_timestamp();
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:PBF.Info.timestamp)
}

// optional int64 changeset = 3;
bool Info::has_changeset() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void Info::set_has_changeset() {
  _has_bits_[0] |= 0x00000004u;
}
void Info::clear_has_changeset() {
  _has_bits_[0] &= ~0x00000004u;
}
void Info::clear_changeset() {
  changeset_ = GOOGLE_LONGLONG(0);
  clear_has_changeset();
}
 ::google::protobuf::int64 Info::changeset() const {
  // @@protoc_insertion_point(field_get:PBF.Info.changeset)
  return changeset_;
}
 void Info::set_changeset(::google::protobuf::int64 value) {
  set_has_changeset();
  changeset_ = value;
  // @@protoc_insertion_point(field_set:PBF.Info.changeset)
}

// optional int32 uid = 4;
bool Info::has_uid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Info::set_has_uid() {
  _has_bits_[0] |= 0x00000008u;
}
void Info::clear_has_uid() {
  _has_bits_[0] &= ~0x00000008u;
}
void Info::clear_uid() {
  uid_ = 0;
  clear_has_uid();
}
 ::google::protobuf::int32 Info::uid() const {
  // @@protoc_insertion_point(field_get:PBF.Info.uid)
  return uid_;
}
 void Info::set_uid(::google::protobuf::int32 value) {
  set_has_uid();
  uid_ = value;
  // @@protoc_insertion_point(field_set:PBF.Info.uid)
}

// optional int32 user_sid = 5;
bool Info::has_user_sid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Info::set_has_user_sid() {
  _has_bits_[0] |= 0x00000010u;
}
void Info::clear_has_user_sid() {
  _has_bits_[0] &= ~0x00000010u;
}
void Info::clear_user_sid() {
  user_sid_ = 0;
  clear_has_user_sid();
}
 ::google::protobuf::int32 Info::user_sid() const {
  // @@protoc_insertion_point(field_get:PBF.Info.user_sid)
  return user_sid_;
}
 void Info::set_user_sid(::google::protobuf::int32 value) {
  set_has_user_sid();
  user_sid_ = value;
  // @@protoc_insertion_point(field_set:PBF.Info.user_sid)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DenseInfo::kVersionFieldNumber;
const int DenseInfo::kTimestampFieldNumber;
const int DenseInfo::kChangesetFieldNumber;
const int DenseInfo::kUidFieldNumber;
const int DenseInfo::kUserSidFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DenseInfo::DenseInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.DenseInfo)
}

void DenseInfo::InitAsDefaultInstance() {
}

DenseInfo::DenseInfo(const DenseInfo& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.DenseInfo)
}

void DenseInfo::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DenseInfo::~DenseInfo() {
  // @@protoc_insertion_point(destructor:PBF.DenseInfo)
  SharedDtor();
}

void DenseInfo::SharedDtor() {
  if (this != default_instance_) {
  }
}

void DenseInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DenseInfo::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DenseInfo_descriptor_;
}

const DenseInfo& DenseInfo::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

DenseInfo* DenseInfo::default_instance_ = NULL;

DenseInfo* DenseInfo::New(::google::protobuf::Arena* arena) const {
  DenseInfo* n = new DenseInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DenseInfo::Clear() {
  version_.Clear();
  timestamp_.Clear();
  changeset_.Clear();
  uid_.Clear();
  user_sid_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DenseInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.DenseInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 version = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_version())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 10, input, this->mutable_version())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_timestamp;
        break;
      }

      // repeated sint64 timestamp = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_timestamp:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_timestamp())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 18, input, this->mutable_timestamp())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_changeset;
        break;
      }

      // repeated sint64 changeset = 3 [packed = true];
      case 3: {
        if (tag == 26) {
         parse_changeset:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_changeset())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 26, input, this->mutable_changeset())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_uid;
        break;
      }

      // repeated sint32 uid = 4 [packed = true];
      case 4: {
        if (tag == 34) {
         parse_uid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_uid())));
        } else if (tag == 32) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 34, input, this->mutable_uid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_user_sid;
        break;
      }

      // repeated sint32 user_sid = 5 [packed = true];
      case 5: {
        if (tag == 42) {
         parse_user_sid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 input, this->mutable_user_sid())));
        } else if (tag == 40) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(
                 1, 42, input, this->mutable_user_sid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.DenseInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.DenseInfo)
  return false;
#undef DO_
}

void DenseInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.DenseInfo)
  // repeated int32 version = 1 [packed = true];
  if (this->version_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_version_cached_byte_size_);
  }
  for (int i = 0; i < this->version_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->version(i), output);
  }

  // repeated sint64 timestamp = 2 [packed = true];
  if (this->timestamp_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_timestamp_cached_byte_size_);
  }
  for (int i = 0; i < this->timestamp_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->timestamp(i), output);
  }

  // repeated sint64 changeset = 3 [packed = true];
  if (this->changeset_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_changeset_cached_byte_size_);
  }
  for (int i = 0; i < this->changeset_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->changeset(i), output);
  }

  // repeated sint32 uid = 4 [packed = true];
  if (this->uid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(4, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_uid_cached_byte_size_);
  }
  for (int i = 0; i < this->uid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->uid(i), output);
  }

  // repeated sint32 user_sid = 5 [packed = true];
  if (this->user_sid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(5, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_user_sid_cached_byte_size_);
  }
  for (int i = 0; i < this->user_sid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt32NoTag(
      this->user_sid(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.DenseInfo)
}

::google::protobuf::uint8* DenseInfo::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.DenseInfo)
  // repeated int32 version = 1 [packed = true];
  if (this->version_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _version_cached_byte_size_, target);
  }
  for (int i = 0; i < this->version_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->version(i), target);
  }

  // repeated sint64 timestamp = 2 [packed = true];
  if (this->timestamp_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _timestamp_cached_byte_size_, target);
  }
  for (int i = 0; i < this->timestamp_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->timestamp(i), target);
  }

  // repeated sint64 changeset = 3 [packed = true];
  if (this->changeset_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _changeset_cached_byte_size_, target);
  }
  for (int i = 0; i < this->changeset_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->changeset(i), target);
  }

  // repeated sint32 uid = 4 [packed = true];
  if (this->uid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      4,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _uid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->uid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->uid(i), target);
  }

  // repeated sint32 user_sid = 5 [packed = true];
  if (this->user_sid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      5,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _user_sid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->user_sid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt32NoTagToArray(this->user_sid(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.DenseInfo)
  return target;
}

int DenseInfo::ByteSize() const {
  int total_size = 0;

  // repeated int32 version = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->version_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->version(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _version_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 timestamp = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->timestamp_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->timestamp(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _timestamp_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 changeset = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->changeset_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->changeset(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _changeset_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 uid = 4 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->uid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->uid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _uid_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint32 user_sid = 5 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->user_sid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt32Size(this->user_sid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _user_sid_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DenseInfo::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DenseInfo* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DenseInfo>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DenseInfo::MergeFrom(const DenseInfo& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  version_.MergeFrom(from.version_);
  timestamp_.MergeFrom(from.timestamp_);
  changeset_.MergeFrom(from.changeset_);
  uid_.MergeFrom(from.uid_);
  user_sid_.MergeFrom(from.user_sid_);
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DenseInfo::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DenseInfo::CopyFrom(const DenseInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DenseInfo::IsInitialized() const {

  return true;
}

void DenseInfo::Swap(DenseInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DenseInfo::InternalSwap(DenseInfo* other) {
  version_.UnsafeArenaSwap(&other->version_);
  timestamp_.UnsafeArenaSwap(&other->timestamp_);
  changeset_.UnsafeArenaSwap(&other->changeset_);
  uid_.UnsafeArenaSwap(&other->uid_);
  user_sid_.UnsafeArenaSwap(&other->user_sid_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DenseInfo::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DenseInfo_descriptor_;
  metadata.reflection = DenseInfo_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DenseInfo

// repeated int32 version = 1 [packed = true];
int DenseInfo::version_size() const {
  return version_.size();
}
void DenseInfo::clear_version() {
  version_.Clear();
}
 ::google::protobuf::int32 DenseInfo::version(int index) const {
  // @@protoc_insertion_point(field_get:PBF.DenseInfo.version)
  return version_.Get(index);
}
 void DenseInfo::set_version(int index, ::google::protobuf::int32 value) {
  version_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.DenseInfo.version)
}
 void DenseInfo::add_version(::google::protobuf::int32 value) {
  version_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.DenseInfo.version)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DenseInfo::version() const {
  // @@protoc_insertion_point(field_list:PBF.DenseInfo.version)
  return version_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DenseInfo::mutable_version() {
  // @@protoc_insertion_point(field_mutable_list:PBF.DenseInfo.version)
  return &version_;
}

// repeated sint64 timestamp = 2 [packed = true];
int DenseInfo::timestamp_size() const {
  return timestamp_.size();
}
void DenseInfo::clear_timestamp() {
  timestamp_.Clear();
}
 ::google::protobuf::int64 DenseInfo::timestamp(int index) const {
  // @@protoc_insertion_point(field_get:PBF.DenseInfo.timestamp)
  return timestamp_.Get(index);
}
 void DenseInfo::set_timestamp(int index, ::google::protobuf::int64 value) {
  timestamp_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.DenseInfo.timestamp)
}
 void DenseInfo::add_timestamp(::google::protobuf::int64 value) {
  timestamp_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.DenseInfo.timestamp)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DenseInfo::timestamp() const {
  // @@protoc_insertion_point(field_list:PBF.DenseInfo.timestamp)
  return timestamp_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DenseInfo::mutable_timestamp() {
  // @@protoc_insertion_point(field_mutable_list:PBF.DenseInfo.timestamp)
  return &timestamp_;
}

// repeated sint64 changeset = 3 [packed = true];
int DenseInfo::changeset_size() const {
  return changeset_.size();
}
void DenseInfo::clear_changeset() {
  changeset_.Clear();
}
 ::google::protobuf::int64 DenseInfo::changeset(int index) const {
  // @@protoc_insertion_point(field_get:PBF.DenseInfo.changeset)
  return changeset_.Get(index);
}
 void DenseInfo::set_changeset(int index, ::google::protobuf::int64 value) {
  changeset_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.DenseInfo.changeset)
}
 void DenseInfo::add_changeset(::google::protobuf::int64 value) {
  changeset_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.DenseInfo.changeset)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DenseInfo::changeset() const {
  // @@protoc_insertion_point(field_list:PBF.DenseInfo.changeset)
  return changeset_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DenseInfo::mutable_changeset() {
  // @@protoc_insertion_point(field_mutable_list:PBF.DenseInfo.changeset)
  return &changeset_;
}

// repeated sint32 uid = 4 [packed = true];
int DenseInfo::uid_size() const {
  return uid_.size();
}
void DenseInfo::clear_uid() {
  uid_.Clear();
}
 ::google::protobuf::int32 DenseInfo::uid(int index) const {
  // @@protoc_insertion_point(field_get:PBF.DenseInfo.uid)
  return uid_.Get(index);
}
 void DenseInfo::set_uid(int index, ::google::protobuf::int32 value) {
  uid_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.DenseInfo.uid)
}
 void DenseInfo::add_uid(::google::protobuf::int32 value) {
  uid_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.DenseInfo.uid)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DenseInfo::uid() const {
  // @@protoc_insertion_point(field_list:PBF.DenseInfo.uid)
  return uid_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DenseInfo::mutable_uid() {
  // @@protoc_insertion_point(field_mutable_list:PBF.DenseInfo.uid)
  return &uid_;
}

// repeated sint32 user_sid = 5 [packed = true];
int DenseInfo::user_sid_size() const {
  return user_sid_.size();
}
void DenseInfo::clear_user_sid() {
  user_sid_.Clear();
}
 ::google::protobuf::int32 DenseInfo::user_sid(int index) const {
  // @@protoc_insertion_point(field_get:PBF.DenseInfo.user_sid)
  return user_sid_.Get(index);
}
 void DenseInfo::set_user_sid(int index, ::google::protobuf::int32 value) {
  user_sid_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.DenseInfo.user_sid)
}
 void DenseInfo::add_user_sid(::google::protobuf::int32 value) {
  user_sid_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.DenseInfo.user_sid)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DenseInfo::user_sid() const {
  // @@protoc_insertion_point(field_list:PBF.DenseInfo.user_sid)
  return user_sid_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DenseInfo::mutable_user_sid() {
  // @@protoc_insertion_point(field_mutable_list:PBF.DenseInfo.user_sid)
  return &user_sid_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ChangeSet::kIdFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ChangeSet::ChangeSet()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.ChangeSet)
}

void ChangeSet::InitAsDefaultInstance() {
}

ChangeSet::ChangeSet(const ChangeSet& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.ChangeSet)
}

void ChangeSet::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ChangeSet::~ChangeSet() {
  // @@protoc_insertion_point(destructor:PBF.ChangeSet)
  SharedDtor();
}

void ChangeSet::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ChangeSet::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ChangeSet::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ChangeSet_descriptor_;
}

const ChangeSet& ChangeSet::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

ChangeSet* ChangeSet::default_instance_ = NULL;

ChangeSet* ChangeSet::New(::google::protobuf::Arena* arena) const {
  ChangeSet* n = new ChangeSet;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ChangeSet::Clear() {
  id_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool ChangeSet::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.ChangeSet)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.ChangeSet)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.ChangeSet)
  return false;
#undef DO_
}

void ChangeSet::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.ChangeSet)
  // required int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.ChangeSet)
}

::google::protobuf::uint8* ChangeSet::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.ChangeSet)
  // required int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.ChangeSet)
  return target;
}

int ChangeSet::ByteSize() const {
  int total_size = 0;

  // required int64 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ChangeSet::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const ChangeSet* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const ChangeSet>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ChangeSet::MergeFrom(const ChangeSet& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void ChangeSet::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ChangeSet::CopyFrom(const ChangeSet& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ChangeSet::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ChangeSet::Swap(ChangeSet* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ChangeSet::InternalSwap(ChangeSet* other) {
  std::swap(id_, other->id_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ChangeSet::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ChangeSet_descriptor_;
  metadata.reflection = ChangeSet_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ChangeSet

// required int64 id = 1;
bool ChangeSet::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void ChangeSet::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void ChangeSet::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void ChangeSet::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::int64 ChangeSet::id() const {
  // @@protoc_insertion_point(field_get:PBF.ChangeSet.id)
  return id_;
}
 void ChangeSet::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PBF.ChangeSet.id)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Node::kIdFieldNumber;
const int Node::kKeysFieldNumber;
const int Node::kValsFieldNumber;
const int Node::kInfoFieldNumber;
const int Node::kLatFieldNumber;
const int Node::kLonFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Node::Node()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.Node)
}

void Node::InitAsDefaultInstance() {
  info_ = const_cast< ::PBF::Info*>(&::PBF::Info::default_instance());
}

Node::Node(const Node& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.Node)
}

void Node::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  info_ = NULL;
  lat_ = GOOGLE_LONGLONG(0);
  lon_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Node::~Node() {
  // @@protoc_insertion_point(destructor:PBF.Node)
  SharedDtor();
}

void Node::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void Node::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Node::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Node_descriptor_;
}

const Node& Node::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

Node* Node::default_instance_ = NULL;

Node* Node::New(::google::protobuf::Arena* arena) const {
  Node* n = new Node;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Node::Clear() {
#define ZR_HELPER_(f) reinterpret_cast<char*>(\
  &reinterpret_cast<Node*>(16)->f)

#define ZR_(first, last) do {\
  ::memset(&first, 0,\
           ZR_HELPER_(last) - ZR_HELPER_(first) + sizeof(last));\
} while (0)

  if (_has_bits_[0 / 32] & 57u) {
    ZR_(lat_, lon_);
    id_ = GOOGLE_LONGLONG(0);
    if (has_info()) {
      if (info_ != NULL) info_->::PBF::Info::Clear();
    }
  }

#undef ZR_HELPER_
#undef ZR_

  keys_.Clear();
  vals_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.Node)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required sint64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_keys;
        break;
      }

      // repeated uint32 keys = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_keys:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_keys())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_keys())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_vals;
        break;
      }

      // repeated uint32 vals = 3 [packed = true];
      case 3: {
        if (tag == 26) {
         parse_vals:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vals())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26, input, this->mutable_vals())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_info;
        break;
      }

      // optional .PBF.Info info = 4;
      case 4: {
        if (tag == 34) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(64)) goto parse_lat;
        break;
      }

      // required sint64 lat = 8;
      case 8: {
        if (tag == 64) {
         parse_lat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &lat_)));
          set_has_lat();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(72)) goto parse_lon;
        break;
      }

      // required sint64 lon = 9;
      case 9: {
        if (tag == 72) {
         parse_lon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, &lon_)));
          set_has_lon();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.Node)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.Node)
  return false;
#undef DO_
}

void Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.Node)
  // required sint64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(1, this->id(), output);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_keys_cached_byte_size_);
  }
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->keys(i), output);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_vals_cached_byte_size_);
  }
  for (int i = 0; i < this->vals_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->vals(i), output);
  }

  // optional .PBF.Info info = 4;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->info_, output);
  }

  // required sint64 lat = 8;
  if (has_lat()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(8, this->lat(), output);
  }

  // required sint64 lon = 9;
  if (has_lon()) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64(9, this->lon(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.Node)
}

::google::protobuf::uint8* Node::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.Node)
  // required sint64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(1, this->id(), target);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _keys_cached_byte_size_, target);
  }
  for (int i = 0; i < this->keys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->keys(i), target);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _vals_cached_byte_size_, target);
  }
  for (int i = 0; i < this->vals_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->vals(i), target);
  }

  // optional .PBF.Info info = 4;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->info_, target);
  }

  // required sint64 lat = 8;
  if (has_lat()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(8, this->lat(), target);
  }

  // required sint64 lon = 9;
  if (has_lon()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(9, this->lon(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.Node)
  return target;
}

int Node::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_id()) {
    // required sint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());
  }

  if (has_lat()) {
    // required sint64 lat = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->lat());
  }

  if (has_lon()) {
    // required sint64 lon = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->lon());
  }

  return total_size;
}
int Node::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000031) ^ 0x00000031) == 0) {  // All required fields are present.
    // required sint64 id = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->id());

    // required sint64 lat = 8;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->lat());

    // required sint64 lon = 9;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::SInt64Size(
        this->lon());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  // optional .PBF.Info info = 4;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // repeated uint32 keys = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->keys_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->keys(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _keys_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 vals = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->vals_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->vals(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vals_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Node::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Node* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Node>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Node::MergeFrom(const Node& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  keys_.MergeFrom(from.keys_);
  vals_.MergeFrom(from.vals_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_info()) {
      mutable_info()->::PBF::Info::MergeFrom(from.info());
    }
    if (from.has_lat()) {
      set_lat(from.lat());
    }
    if (from.has_lon()) {
      set_lon(from.lon());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Node::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Node::CopyFrom(const Node& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Node::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000031) != 0x00000031) return false;

  return true;
}

void Node::Swap(Node* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Node::InternalSwap(Node* other) {
  std::swap(id_, other->id_);
  keys_.UnsafeArenaSwap(&other->keys_);
  vals_.UnsafeArenaSwap(&other->vals_);
  std::swap(info_, other->info_);
  std::swap(lat_, other->lat_);
  std::swap(lon_, other->lon_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Node::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Node_descriptor_;
  metadata.reflection = Node_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Node

// required sint64 id = 1;
bool Node::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Node::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Node::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Node::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::int64 Node::id() const {
  // @@protoc_insertion_point(field_get:PBF.Node.id)
  return id_;
}
 void Node::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PBF.Node.id)
}

// repeated uint32 keys = 2 [packed = true];
int Node::keys_size() const {
  return keys_.size();
}
void Node::clear_keys() {
  keys_.Clear();
}
 ::google::protobuf::uint32 Node::keys(int index) const {
  // @@protoc_insertion_point(field_get:PBF.Node.keys)
  return keys_.Get(index);
}
 void Node::set_keys(int index, ::google::protobuf::uint32 value) {
  keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.Node.keys)
}
 void Node::add_keys(::google::protobuf::uint32 value) {
  keys_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.Node.keys)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Node::keys() const {
  // @@protoc_insertion_point(field_list:PBF.Node.keys)
  return keys_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Node::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:PBF.Node.keys)
  return &keys_;
}

// repeated uint32 vals = 3 [packed = true];
int Node::vals_size() const {
  return vals_.size();
}
void Node::clear_vals() {
  vals_.Clear();
}
 ::google::protobuf::uint32 Node::vals(int index) const {
  // @@protoc_insertion_point(field_get:PBF.Node.vals)
  return vals_.Get(index);
}
 void Node::set_vals(int index, ::google::protobuf::uint32 value) {
  vals_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.Node.vals)
}
 void Node::add_vals(::google::protobuf::uint32 value) {
  vals_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.Node.vals)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Node::vals() const {
  // @@protoc_insertion_point(field_list:PBF.Node.vals)
  return vals_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Node::mutable_vals() {
  // @@protoc_insertion_point(field_mutable_list:PBF.Node.vals)
  return &vals_;
}

// optional .PBF.Info info = 4;
bool Node::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Node::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
void Node::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
void Node::clear_info() {
  if (info_ != NULL) info_->::PBF::Info::Clear();
  clear_has_info();
}
const ::PBF::Info& Node::info() const {
  // @@protoc_insertion_point(field_get:PBF.Node.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::PBF::Info* Node::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::PBF::Info;
  }
  // @@protoc_insertion_point(field_mutable:PBF.Node.info)
  return info_;
}
::PBF::Info* Node::release_info() {
  clear_has_info();
  ::PBF::Info* temp = info_;
  info_ = NULL;
  return temp;
}
void Node::set_allocated_info(::PBF::Info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:PBF.Node.info)
}

// required sint64 lat = 8;
bool Node::has_lat() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
void Node::set_has_lat() {
  _has_bits_[0] |= 0x00000010u;
}
void Node::clear_has_lat() {
  _has_bits_[0] &= ~0x00000010u;
}
void Node::clear_lat() {
  lat_ = GOOGLE_LONGLONG(0);
  clear_has_lat();
}
 ::google::protobuf::int64 Node::lat() const {
  // @@protoc_insertion_point(field_get:PBF.Node.lat)
  return lat_;
}
 void Node::set_lat(::google::protobuf::int64 value) {
  set_has_lat();
  lat_ = value;
  // @@protoc_insertion_point(field_set:PBF.Node.lat)
}

// required sint64 lon = 9;
bool Node::has_lon() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
void Node::set_has_lon() {
  _has_bits_[0] |= 0x00000020u;
}
void Node::clear_has_lon() {
  _has_bits_[0] &= ~0x00000020u;
}
void Node::clear_lon() {
  lon_ = GOOGLE_LONGLONG(0);
  clear_has_lon();
}
 ::google::protobuf::int64 Node::lon() const {
  // @@protoc_insertion_point(field_get:PBF.Node.lon)
  return lon_;
}
 void Node::set_lon(::google::protobuf::int64 value) {
  set_has_lon();
  lon_ = value;
  // @@protoc_insertion_point(field_set:PBF.Node.lon)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DenseNodes::kIdFieldNumber;
const int DenseNodes::kDenseinfoFieldNumber;
const int DenseNodes::kLatFieldNumber;
const int DenseNodes::kLonFieldNumber;
const int DenseNodes::kKeysValsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DenseNodes::DenseNodes()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.DenseNodes)
}

void DenseNodes::InitAsDefaultInstance() {
  denseinfo_ = const_cast< ::PBF::DenseInfo*>(&::PBF::DenseInfo::default_instance());
}

DenseNodes::DenseNodes(const DenseNodes& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.DenseNodes)
}

void DenseNodes::SharedCtor() {
  _cached_size_ = 0;
  denseinfo_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

DenseNodes::~DenseNodes() {
  // @@protoc_insertion_point(destructor:PBF.DenseNodes)
  SharedDtor();
}

void DenseNodes::SharedDtor() {
  if (this != default_instance_) {
    delete denseinfo_;
  }
}

void DenseNodes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DenseNodes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return DenseNodes_descriptor_;
}

const DenseNodes& DenseNodes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

DenseNodes* DenseNodes::default_instance_ = NULL;

DenseNodes* DenseNodes::New(::google::protobuf::Arena* arena) const {
  DenseNodes* n = new DenseNodes;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DenseNodes::Clear() {
  if (has_denseinfo()) {
    if (denseinfo_ != NULL) denseinfo_->::PBF::DenseInfo::Clear();
  }
  id_.Clear();
  lat_.Clear();
  lon_.Clear();
  keys_vals_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool DenseNodes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.DenseNodes)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated sint64 id = 1 [packed = true];
      case 1: {
        if (tag == 10) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_id())));
        } else if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 10, input, this->mutable_id())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(42)) goto parse_denseinfo;
        break;
      }

      // optional .PBF.DenseInfo denseinfo = 5;
      case 5: {
        if (tag == 42) {
         parse_denseinfo:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_denseinfo()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_lat;
        break;
      }

      // repeated sint64 lat = 8 [packed = true];
      case 8: {
        if (tag == 66) {
         parse_lat:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_lat())));
        } else if (tag == 64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 66, input, this->mutable_lat())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_lon;
        break;
      }

      // repeated sint64 lon = 9 [packed = true];
      case 9: {
        if (tag == 74) {
         parse_lon:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_lon())));
        } else if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 74, input, this->mutable_lon())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_keys_vals;
        break;
      }

      // repeated int32 keys_vals = 10 [packed = true];
      case 10: {
        if (tag == 82) {
         parse_keys_vals:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_keys_vals())));
        } else if (tag == 80) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 82, input, this->mutable_keys_vals())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.DenseNodes)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.DenseNodes)
  return false;
#undef DO_
}

void DenseNodes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.DenseNodes)
  // repeated sint64 id = 1 [packed = true];
  if (this->id_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_id_cached_byte_size_);
  }
  for (int i = 0; i < this->id_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->id(i), output);
  }

  // optional .PBF.DenseInfo denseinfo = 5;
  if (has_denseinfo()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, *this->denseinfo_, output);
  }

  // repeated sint64 lat = 8 [packed = true];
  if (this->lat_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_lat_cached_byte_size_);
  }
  for (int i = 0; i < this->lat_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->lat(i), output);
  }

  // repeated sint64 lon = 9 [packed = true];
  if (this->lon_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_lon_cached_byte_size_);
  }
  for (int i = 0; i < this->lon_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->lon(i), output);
  }

  // repeated int32 keys_vals = 10 [packed = true];
  if (this->keys_vals_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(10, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_keys_vals_cached_byte_size_);
  }
  for (int i = 0; i < this->keys_vals_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->keys_vals(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.DenseNodes)
}

::google::protobuf::uint8* DenseNodes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.DenseNodes)
  // repeated sint64 id = 1 [packed = true];
  if (this->id_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      1,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _id_cached_byte_size_, target);
  }
  for (int i = 0; i < this->id_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->id(i), target);
  }

  // optional .PBF.DenseInfo denseinfo = 5;
  if (has_denseinfo()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, *this->denseinfo_, target);
  }

  // repeated sint64 lat = 8 [packed = true];
  if (this->lat_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _lat_cached_byte_size_, target);
  }
  for (int i = 0; i < this->lat_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->lat(i), target);
  }

  // repeated sint64 lon = 9 [packed = true];
  if (this->lon_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _lon_cached_byte_size_, target);
  }
  for (int i = 0; i < this->lon_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->lon(i), target);
  }

  // repeated int32 keys_vals = 10 [packed = true];
  if (this->keys_vals_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _keys_vals_cached_byte_size_, target);
  }
  for (int i = 0; i < this->keys_vals_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->keys_vals(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.DenseNodes)
  return target;
}

int DenseNodes::ByteSize() const {
  int total_size = 0;

  // optional .PBF.DenseInfo denseinfo = 5;
  if (has_denseinfo()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->denseinfo_);
  }

  // repeated sint64 id = 1 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->id_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->id(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _id_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 lat = 8 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->lat_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->lat(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lat_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 lon = 9 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->lon_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->lon(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _lon_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 keys_vals = 10 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->keys_vals_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->keys_vals(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _keys_vals_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DenseNodes::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const DenseNodes* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const DenseNodes>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void DenseNodes::MergeFrom(const DenseNodes& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  id_.MergeFrom(from.id_);
  lat_.MergeFrom(from.lat_);
  lon_.MergeFrom(from.lon_);
  keys_vals_.MergeFrom(from.keys_vals_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_denseinfo()) {
      mutable_denseinfo()->::PBF::DenseInfo::MergeFrom(from.denseinfo());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void DenseNodes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DenseNodes::CopyFrom(const DenseNodes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DenseNodes::IsInitialized() const {

  return true;
}

void DenseNodes::Swap(DenseNodes* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DenseNodes::InternalSwap(DenseNodes* other) {
  id_.UnsafeArenaSwap(&other->id_);
  std::swap(denseinfo_, other->denseinfo_);
  lat_.UnsafeArenaSwap(&other->lat_);
  lon_.UnsafeArenaSwap(&other->lon_);
  keys_vals_.UnsafeArenaSwap(&other->keys_vals_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DenseNodes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = DenseNodes_descriptor_;
  metadata.reflection = DenseNodes_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DenseNodes

// repeated sint64 id = 1 [packed = true];
int DenseNodes::id_size() const {
  return id_.size();
}
void DenseNodes::clear_id() {
  id_.Clear();
}
 ::google::protobuf::int64 DenseNodes::id(int index) const {
  // @@protoc_insertion_point(field_get:PBF.DenseNodes.id)
  return id_.Get(index);
}
 void DenseNodes::set_id(int index, ::google::protobuf::int64 value) {
  id_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.DenseNodes.id)
}
 void DenseNodes::add_id(::google::protobuf::int64 value) {
  id_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.DenseNodes.id)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DenseNodes::id() const {
  // @@protoc_insertion_point(field_list:PBF.DenseNodes.id)
  return id_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DenseNodes::mutable_id() {
  // @@protoc_insertion_point(field_mutable_list:PBF.DenseNodes.id)
  return &id_;
}

// optional .PBF.DenseInfo denseinfo = 5;
bool DenseNodes::has_denseinfo() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void DenseNodes::set_has_denseinfo() {
  _has_bits_[0] |= 0x00000002u;
}
void DenseNodes::clear_has_denseinfo() {
  _has_bits_[0] &= ~0x00000002u;
}
void DenseNodes::clear_denseinfo() {
  if (denseinfo_ != NULL) denseinfo_->::PBF::DenseInfo::Clear();
  clear_has_denseinfo();
}
const ::PBF::DenseInfo& DenseNodes::denseinfo() const {
  // @@protoc_insertion_point(field_get:PBF.DenseNodes.denseinfo)
  return denseinfo_ != NULL ? *denseinfo_ : *default_instance_->denseinfo_;
}
::PBF::DenseInfo* DenseNodes::mutable_denseinfo() {
  set_has_denseinfo();
  if (denseinfo_ == NULL) {
    denseinfo_ = new ::PBF::DenseInfo;
  }
  // @@protoc_insertion_point(field_mutable:PBF.DenseNodes.denseinfo)
  return denseinfo_;
}
::PBF::DenseInfo* DenseNodes::release_denseinfo() {
  clear_has_denseinfo();
  ::PBF::DenseInfo* temp = denseinfo_;
  denseinfo_ = NULL;
  return temp;
}
void DenseNodes::set_allocated_denseinfo(::PBF::DenseInfo* denseinfo) {
  delete denseinfo_;
  denseinfo_ = denseinfo;
  if (denseinfo) {
    set_has_denseinfo();
  } else {
    clear_has_denseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:PBF.DenseNodes.denseinfo)
}

// repeated sint64 lat = 8 [packed = true];
int DenseNodes::lat_size() const {
  return lat_.size();
}
void DenseNodes::clear_lat() {
  lat_.Clear();
}
 ::google::protobuf::int64 DenseNodes::lat(int index) const {
  // @@protoc_insertion_point(field_get:PBF.DenseNodes.lat)
  return lat_.Get(index);
}
 void DenseNodes::set_lat(int index, ::google::protobuf::int64 value) {
  lat_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.DenseNodes.lat)
}
 void DenseNodes::add_lat(::google::protobuf::int64 value) {
  lat_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.DenseNodes.lat)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DenseNodes::lat() const {
  // @@protoc_insertion_point(field_list:PBF.DenseNodes.lat)
  return lat_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DenseNodes::mutable_lat() {
  // @@protoc_insertion_point(field_mutable_list:PBF.DenseNodes.lat)
  return &lat_;
}

// repeated sint64 lon = 9 [packed = true];
int DenseNodes::lon_size() const {
  return lon_.size();
}
void DenseNodes::clear_lon() {
  lon_.Clear();
}
 ::google::protobuf::int64 DenseNodes::lon(int index) const {
  // @@protoc_insertion_point(field_get:PBF.DenseNodes.lon)
  return lon_.Get(index);
}
 void DenseNodes::set_lon(int index, ::google::protobuf::int64 value) {
  lon_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.DenseNodes.lon)
}
 void DenseNodes::add_lon(::google::protobuf::int64 value) {
  lon_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.DenseNodes.lon)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
DenseNodes::lon() const {
  // @@protoc_insertion_point(field_list:PBF.DenseNodes.lon)
  return lon_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
DenseNodes::mutable_lon() {
  // @@protoc_insertion_point(field_mutable_list:PBF.DenseNodes.lon)
  return &lon_;
}

// repeated int32 keys_vals = 10 [packed = true];
int DenseNodes::keys_vals_size() const {
  return keys_vals_.size();
}
void DenseNodes::clear_keys_vals() {
  keys_vals_.Clear();
}
 ::google::protobuf::int32 DenseNodes::keys_vals(int index) const {
  // @@protoc_insertion_point(field_get:PBF.DenseNodes.keys_vals)
  return keys_vals_.Get(index);
}
 void DenseNodes::set_keys_vals(int index, ::google::protobuf::int32 value) {
  keys_vals_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.DenseNodes.keys_vals)
}
 void DenseNodes::add_keys_vals(::google::protobuf::int32 value) {
  keys_vals_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.DenseNodes.keys_vals)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
DenseNodes::keys_vals() const {
  // @@protoc_insertion_point(field_list:PBF.DenseNodes.keys_vals)
  return keys_vals_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
DenseNodes::mutable_keys_vals() {
  // @@protoc_insertion_point(field_mutable_list:PBF.DenseNodes.keys_vals)
  return &keys_vals_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Way::kIdFieldNumber;
const int Way::kKeysFieldNumber;
const int Way::kValsFieldNumber;
const int Way::kInfoFieldNumber;
const int Way::kRefsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Way::Way()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.Way)
}

void Way::InitAsDefaultInstance() {
  info_ = const_cast< ::PBF::Info*>(&::PBF::Info::default_instance());
}

Way::Way(const Way& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.Way)
}

void Way::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Way::~Way() {
  // @@protoc_insertion_point(destructor:PBF.Way)
  SharedDtor();
}

void Way::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void Way::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Way::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Way_descriptor_;
}

const Way& Way::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

Way* Way::default_instance_ = NULL;

Way* Way::New(::google::protobuf::Arena* arena) const {
  Way* n = new Way;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Way::Clear() {
  if (_has_bits_[0 / 32] & 9u) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_info()) {
      if (info_ != NULL) info_->::PBF::Info::Clear();
    }
  }
  keys_.Clear();
  vals_.Clear();
  refs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Way::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.Way)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_keys;
        break;
      }

      // repeated uint32 keys = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_keys:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_keys())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_keys())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_vals;
        break;
      }

      // repeated uint32 vals = 3 [packed = true];
      case 3: {
        if (tag == 26) {
         parse_vals:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vals())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26, input, this->mutable_vals())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_info;
        break;
      }

      // optional .PBF.Info info = 4;
      case 4: {
        if (tag == 34) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_refs;
        break;
      }

      // repeated sint64 refs = 8 [packed = true];
      case 8: {
        if (tag == 66) {
         parse_refs:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_refs())));
        } else if (tag == 64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 66, input, this->mutable_refs())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.Way)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.Way)
  return false;
#undef DO_
}

void Way::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.Way)
  // required int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_keys_cached_byte_size_);
  }
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->keys(i), output);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_vals_cached_byte_size_);
  }
  for (int i = 0; i < this->vals_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->vals(i), output);
  }

  // optional .PBF.Info info = 4;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->info_, output);
  }

  // repeated sint64 refs = 8 [packed = true];
  if (this->refs_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_refs_cached_byte_size_);
  }
  for (int i = 0; i < this->refs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->refs(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.Way)
}

::google::protobuf::uint8* Way::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.Way)
  // required int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _keys_cached_byte_size_, target);
  }
  for (int i = 0; i < this->keys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->keys(i), target);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _vals_cached_byte_size_, target);
  }
  for (int i = 0; i < this->vals_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->vals(i), target);
  }

  // optional .PBF.Info info = 4;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->info_, target);
  }

  // repeated sint64 refs = 8 [packed = true];
  if (this->refs_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _refs_cached_byte_size_, target);
  }
  for (int i = 0; i < this->refs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->refs(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.Way)
  return target;
}

int Way::ByteSize() const {
  int total_size = 0;

  // required int64 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }
  // optional .PBF.Info info = 4;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // repeated uint32 keys = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->keys_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->keys(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _keys_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 vals = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->vals_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->vals(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vals_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 refs = 8 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->refs_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->refs(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _refs_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Way::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Way* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Way>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Way::MergeFrom(const Way& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  keys_.MergeFrom(from.keys_);
  vals_.MergeFrom(from.vals_);
  refs_.MergeFrom(from.refs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_info()) {
      mutable_info()->::PBF::Info::MergeFrom(from.info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Way::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Way::CopyFrom(const Way& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Way::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Way::Swap(Way* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Way::InternalSwap(Way* other) {
  std::swap(id_, other->id_);
  keys_.UnsafeArenaSwap(&other->keys_);
  vals_.UnsafeArenaSwap(&other->vals_);
  std::swap(info_, other->info_);
  refs_.UnsafeArenaSwap(&other->refs_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Way::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Way_descriptor_;
  metadata.reflection = Way_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Way

// required int64 id = 1;
bool Way::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Way::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Way::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Way::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::int64 Way::id() const {
  // @@protoc_insertion_point(field_get:PBF.Way.id)
  return id_;
}
 void Way::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PBF.Way.id)
}

// repeated uint32 keys = 2 [packed = true];
int Way::keys_size() const {
  return keys_.size();
}
void Way::clear_keys() {
  keys_.Clear();
}
 ::google::protobuf::uint32 Way::keys(int index) const {
  // @@protoc_insertion_point(field_get:PBF.Way.keys)
  return keys_.Get(index);
}
 void Way::set_keys(int index, ::google::protobuf::uint32 value) {
  keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.Way.keys)
}
 void Way::add_keys(::google::protobuf::uint32 value) {
  keys_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.Way.keys)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Way::keys() const {
  // @@protoc_insertion_point(field_list:PBF.Way.keys)
  return keys_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Way::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:PBF.Way.keys)
  return &keys_;
}

// repeated uint32 vals = 3 [packed = true];
int Way::vals_size() const {
  return vals_.size();
}
void Way::clear_vals() {
  vals_.Clear();
}
 ::google::protobuf::uint32 Way::vals(int index) const {
  // @@protoc_insertion_point(field_get:PBF.Way.vals)
  return vals_.Get(index);
}
 void Way::set_vals(int index, ::google::protobuf::uint32 value) {
  vals_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.Way.vals)
}
 void Way::add_vals(::google::protobuf::uint32 value) {
  vals_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.Way.vals)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Way::vals() const {
  // @@protoc_insertion_point(field_list:PBF.Way.vals)
  return vals_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Way::mutable_vals() {
  // @@protoc_insertion_point(field_mutable_list:PBF.Way.vals)
  return &vals_;
}

// optional .PBF.Info info = 4;
bool Way::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Way::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
void Way::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
void Way::clear_info() {
  if (info_ != NULL) info_->::PBF::Info::Clear();
  clear_has_info();
}
const ::PBF::Info& Way::info() const {
  // @@protoc_insertion_point(field_get:PBF.Way.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::PBF::Info* Way::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::PBF::Info;
  }
  // @@protoc_insertion_point(field_mutable:PBF.Way.info)
  return info_;
}
::PBF::Info* Way::release_info() {
  clear_has_info();
  ::PBF::Info* temp = info_;
  info_ = NULL;
  return temp;
}
void Way::set_allocated_info(::PBF::Info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:PBF.Way.info)
}

// repeated sint64 refs = 8 [packed = true];
int Way::refs_size() const {
  return refs_.size();
}
void Way::clear_refs() {
  refs_.Clear();
}
 ::google::protobuf::int64 Way::refs(int index) const {
  // @@protoc_insertion_point(field_get:PBF.Way.refs)
  return refs_.Get(index);
}
 void Way::set_refs(int index, ::google::protobuf::int64 value) {
  refs_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.Way.refs)
}
 void Way::add_refs(::google::protobuf::int64 value) {
  refs_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.Way.refs)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Way::refs() const {
  // @@protoc_insertion_point(field_list:PBF.Way.refs)
  return refs_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Way::mutable_refs() {
  // @@protoc_insertion_point(field_mutable_list:PBF.Way.refs)
  return &refs_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

const ::google::protobuf::EnumDescriptor* Relation_MemberType_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Relation_MemberType_descriptor_;
}
bool Relation_MemberType_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const Relation_MemberType Relation::NODE;
const Relation_MemberType Relation::WAY;
const Relation_MemberType Relation::RELATION;
const Relation_MemberType Relation::MemberType_MIN;
const Relation_MemberType Relation::MemberType_MAX;
const int Relation::MemberType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Relation::kIdFieldNumber;
const int Relation::kKeysFieldNumber;
const int Relation::kValsFieldNumber;
const int Relation::kInfoFieldNumber;
const int Relation::kRolesSidFieldNumber;
const int Relation::kMemidsFieldNumber;
const int Relation::kTypesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Relation::Relation()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:PBF.Relation)
}

void Relation::InitAsDefaultInstance() {
  info_ = const_cast< ::PBF::Info*>(&::PBF::Info::default_instance());
}

Relation::Relation(const Relation& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:PBF.Relation)
}

void Relation::SharedCtor() {
  _cached_size_ = 0;
  id_ = GOOGLE_LONGLONG(0);
  info_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Relation::~Relation() {
  // @@protoc_insertion_point(destructor:PBF.Relation)
  SharedDtor();
}

void Relation::SharedDtor() {
  if (this != default_instance_) {
    delete info_;
  }
}

void Relation::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Relation::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Relation_descriptor_;
}

const Relation& Relation::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_osmformat_2eproto();
  return *default_instance_;
}

Relation* Relation::default_instance_ = NULL;

Relation* Relation::New(::google::protobuf::Arena* arena) const {
  Relation* n = new Relation;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Relation::Clear() {
  if (_has_bits_[0 / 32] & 9u) {
    id_ = GOOGLE_LONGLONG(0);
    if (has_info()) {
      if (info_ != NULL) info_->::PBF::Info::Clear();
    }
  }
  keys_.Clear();
  vals_.Clear();
  roles_sid_.Clear();
  memids_.Clear();
  types_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool Relation::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:PBF.Relation)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_keys;
        break;
      }

      // repeated uint32 keys = 2 [packed = true];
      case 2: {
        if (tag == 18) {
         parse_keys:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_keys())));
        } else if (tag == 16) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 18, input, this->mutable_keys())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_vals;
        break;
      }

      // repeated uint32 vals = 3 [packed = true];
      case 3: {
        if (tag == 26) {
         parse_vals:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, this->mutable_vals())));
        } else if (tag == 24) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 1, 26, input, this->mutable_vals())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_info;
        break;
      }

      // optional .PBF.Info info = 4;
      case 4: {
        if (tag == 34) {
         parse_info:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_info()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(66)) goto parse_roles_sid;
        break;
      }

      // repeated int32 roles_sid = 8 [packed = true];
      case 8: {
        if (tag == 66) {
         parse_roles_sid:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_roles_sid())));
        } else if (tag == 64) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 66, input, this->mutable_roles_sid())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(74)) goto parse_memids;
        break;
      }

      // repeated sint64 memids = 9 [packed = true];
      case 9: {
        if (tag == 74) {
         parse_memids:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 input, this->mutable_memids())));
        } else if (tag == 72) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(
                 1, 74, input, this->mutable_memids())));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(82)) goto parse_types;
        break;
      }

      // repeated .PBF.Relation.MemberType types = 10 [packed = true];
      case 10: {
        if (tag == 82) {
         parse_types:
          ::google::protobuf::uint32 length;
          DO_(input->ReadVarint32(&length));
          ::google::protobuf::io::CodedInputStream::Limit limit = input->PushLimit(length);
          while (input->BytesUntilLimit() > 0) {
            int value;
            DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
            if (::PBF::Relation_MemberType_IsValid(value)) {
              add_types(static_cast< ::PBF::Relation_MemberType >(value));
            } else {
              mutable_unknown_fields()->AddVarint(10, value);
            }
          }
          input->PopLimit(limit);
        } else if (tag == 80) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::PBF::Relation_MemberType_IsValid(value)) {
            add_types(static_cast< ::PBF::Relation_MemberType >(value));
          } else {
            mutable_unknown_fields()->AddVarint(10, value);
          }
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:PBF.Relation)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:PBF.Relation)
  return false;
#undef DO_
}

void Relation::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:PBF.Relation)
  // required int64 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->id(), output);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(2, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_keys_cached_byte_size_);
  }
  for (int i = 0; i < this->keys_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->keys(i), output);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(3, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_vals_cached_byte_size_);
  }
  for (int i = 0; i < this->vals_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32NoTag(
      this->vals(i), output);
  }

  // optional .PBF.Info info = 4;
  if (has_info()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, *this->info_, output);
  }

  // repeated int32 roles_sid = 8 [packed = true];
  if (this->roles_sid_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_roles_sid_cached_byte_size_);
  }
  for (int i = 0; i < this->roles_sid_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(
      this->roles_sid(i), output);
  }

  // repeated sint64 memids = 9 [packed = true];
  if (this->memids_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_memids_cached_byte_size_);
  }
  for (int i = 0; i < this->memids_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteSInt64NoTag(
      this->memids(i), output);
  }

  // repeated .PBF.Relation.MemberType types = 10 [packed = true];
  if (this->types_size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteTag(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      output);
    output->WriteVarint32(_types_cached_byte_size_);
  }
  for (int i = 0; i < this->types_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteEnumNoTag(
      this->types(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:PBF.Relation)
}

::google::protobuf::uint8* Relation::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:PBF.Relation)
  // required int64 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->id(), target);
  }

  // repeated uint32 keys = 2 [packed = true];
  if (this->keys_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      2,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _keys_cached_byte_size_, target);
  }
  for (int i = 0; i < this->keys_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->keys(i), target);
  }

  // repeated uint32 vals = 3 [packed = true];
  if (this->vals_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      3,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _vals_cached_byte_size_, target);
  }
  for (int i = 0; i < this->vals_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteUInt32NoTagToArray(this->vals(i), target);
  }

  // optional .PBF.Info info = 4;
  if (has_info()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, *this->info_, target);
  }

  // repeated int32 roles_sid = 8 [packed = true];
  if (this->roles_sid_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      8,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _roles_sid_cached_byte_size_, target);
  }
  for (int i = 0; i < this->roles_sid_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->roles_sid(i), target);
  }

  // repeated sint64 memids = 9 [packed = true];
  if (this->memids_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      9,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
      _memids_cached_byte_size_, target);
  }
  for (int i = 0; i < this->memids_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteSInt64NoTagToArray(this->memids(i), target);
  }

  // repeated .PBF.Relation.MemberType types = 10 [packed = true];
  if (this->types_size() > 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
      10,
      ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(    _types_cached_byte_size_, target);
  }
  for (int i = 0; i < this->types_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumNoTagToArray(
      this->types(i), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:PBF.Relation)
  return target;
}

int Relation::ByteSize() const {
  int total_size = 0;

  // required int64 id = 1;
  if (has_id()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->id());
  }
  // optional .PBF.Info info = 4;
  if (has_info()) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        *this->info_);
  }

  // repeated uint32 keys = 2 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->keys_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->keys(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _keys_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated uint32 vals = 3 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->vals_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        UInt32Size(this->vals(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _vals_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated int32 roles_sid = 8 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->roles_sid_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->roles_sid(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _roles_sid_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated sint64 memids = 9 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->memids_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        SInt64Size(this->memids(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _memids_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  // repeated .PBF.Relation.MemberType types = 10 [packed = true];
  {
    int data_size = 0;
    for (int i = 0; i < this->types_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::EnumSize(
        this->types(i));
    }
    if (data_size > 0) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(data_size);
    }
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _types_cached_byte_size_ = data_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    total_size += data_size;
  }

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Relation::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const Relation* source = 
      ::google::protobuf::internal::DynamicCastToGenerated<const Relation>(
          &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Relation::MergeFrom(const Relation& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  keys_.MergeFrom(from.keys_);
  vals_.MergeFrom(from.vals_);
  roles_sid_.MergeFrom(from.roles_sid_);
  memids_.MergeFrom(from.memids_);
  types_.MergeFrom(from.types_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_info()) {
      mutable_info()->::PBF::Info::MergeFrom(from.info());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void Relation::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Relation::CopyFrom(const Relation& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Relation::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Relation::Swap(Relation* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Relation::InternalSwap(Relation* other) {
  std::swap(id_, other->id_);
  keys_.UnsafeArenaSwap(&other->keys_);
  vals_.UnsafeArenaSwap(&other->vals_);
  std::swap(info_, other->info_);
  roles_sid_.UnsafeArenaSwap(&other->roles_sid_);
  memids_.UnsafeArenaSwap(&other->memids_);
  types_.UnsafeArenaSwap(&other->types_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Relation::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Relation_descriptor_;
  metadata.reflection = Relation_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Relation

// required int64 id = 1;
bool Relation::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void Relation::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
void Relation::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
void Relation::clear_id() {
  id_ = GOOGLE_LONGLONG(0);
  clear_has_id();
}
 ::google::protobuf::int64 Relation::id() const {
  // @@protoc_insertion_point(field_get:PBF.Relation.id)
  return id_;
}
 void Relation::set_id(::google::protobuf::int64 value) {
  set_has_id();
  id_ = value;
  // @@protoc_insertion_point(field_set:PBF.Relation.id)
}

// repeated uint32 keys = 2 [packed = true];
int Relation::keys_size() const {
  return keys_.size();
}
void Relation::clear_keys() {
  keys_.Clear();
}
 ::google::protobuf::uint32 Relation::keys(int index) const {
  // @@protoc_insertion_point(field_get:PBF.Relation.keys)
  return keys_.Get(index);
}
 void Relation::set_keys(int index, ::google::protobuf::uint32 value) {
  keys_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.Relation.keys)
}
 void Relation::add_keys(::google::protobuf::uint32 value) {
  keys_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.Relation.keys)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Relation::keys() const {
  // @@protoc_insertion_point(field_list:PBF.Relation.keys)
  return keys_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Relation::mutable_keys() {
  // @@protoc_insertion_point(field_mutable_list:PBF.Relation.keys)
  return &keys_;
}

// repeated uint32 vals = 3 [packed = true];
int Relation::vals_size() const {
  return vals_.size();
}
void Relation::clear_vals() {
  vals_.Clear();
}
 ::google::protobuf::uint32 Relation::vals(int index) const {
  // @@protoc_insertion_point(field_get:PBF.Relation.vals)
  return vals_.Get(index);
}
 void Relation::set_vals(int index, ::google::protobuf::uint32 value) {
  vals_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.Relation.vals)
}
 void Relation::add_vals(::google::protobuf::uint32 value) {
  vals_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.Relation.vals)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
Relation::vals() const {
  // @@protoc_insertion_point(field_list:PBF.Relation.vals)
  return vals_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
Relation::mutable_vals() {
  // @@protoc_insertion_point(field_mutable_list:PBF.Relation.vals)
  return &vals_;
}

// optional .PBF.Info info = 4;
bool Relation::has_info() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void Relation::set_has_info() {
  _has_bits_[0] |= 0x00000008u;
}
void Relation::clear_has_info() {
  _has_bits_[0] &= ~0x00000008u;
}
void Relation::clear_info() {
  if (info_ != NULL) info_->::PBF::Info::Clear();
  clear_has_info();
}
const ::PBF::Info& Relation::info() const {
  // @@protoc_insertion_point(field_get:PBF.Relation.info)
  return info_ != NULL ? *info_ : *default_instance_->info_;
}
::PBF::Info* Relation::mutable_info() {
  set_has_info();
  if (info_ == NULL) {
    info_ = new ::PBF::Info;
  }
  // @@protoc_insertion_point(field_mutable:PBF.Relation.info)
  return info_;
}
::PBF::Info* Relation::release_info() {
  clear_has_info();
  ::PBF::Info* temp = info_;
  info_ = NULL;
  return temp;
}
void Relation::set_allocated_info(::PBF::Info* info) {
  delete info_;
  info_ = info;
  if (info) {
    set_has_info();
  } else {
    clear_has_info();
  }
  // @@protoc_insertion_point(field_set_allocated:PBF.Relation.info)
}

// repeated int32 roles_sid = 8 [packed = true];
int Relation::roles_sid_size() const {
  return roles_sid_.size();
}
void Relation::clear_roles_sid() {
  roles_sid_.Clear();
}
 ::google::protobuf::int32 Relation::roles_sid(int index) const {
  // @@protoc_insertion_point(field_get:PBF.Relation.roles_sid)
  return roles_sid_.Get(index);
}
 void Relation::set_roles_sid(int index, ::google::protobuf::int32 value) {
  roles_sid_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.Relation.roles_sid)
}
 void Relation::add_roles_sid(::google::protobuf::int32 value) {
  roles_sid_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.Relation.roles_sid)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
Relation::roles_sid() const {
  // @@protoc_insertion_point(field_list:PBF.Relation.roles_sid)
  return roles_sid_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
Relation::mutable_roles_sid() {
  // @@protoc_insertion_point(field_mutable_list:PBF.Relation.roles_sid)
  return &roles_sid_;
}

// repeated sint64 memids = 9 [packed = true];
int Relation::memids_size() const {
  return memids_.size();
}
void Relation::clear_memids() {
  memids_.Clear();
}
 ::google::protobuf::int64 Relation::memids(int index) const {
  // @@protoc_insertion_point(field_get:PBF.Relation.memids)
  return memids_.Get(index);
}
 void Relation::set_memids(int index, ::google::protobuf::int64 value) {
  memids_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.Relation.memids)
}
 void Relation::add_memids(::google::protobuf::int64 value) {
  memids_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.Relation.memids)
}
 const ::google::protobuf::RepeatedField< ::google::protobuf::int64 >&
Relation::memids() const {
  // @@protoc_insertion_point(field_list:PBF.Relation.memids)
  return memids_;
}
 ::google::protobuf::RepeatedField< ::google::protobuf::int64 >*
Relation::mutable_memids() {
  // @@protoc_insertion_point(field_mutable_list:PBF.Relation.memids)
  return &memids_;
}

// repeated .PBF.Relation.MemberType types = 10 [packed = true];
int Relation::types_size() const {
  return types_.size();
}
void Relation::clear_types() {
  types_.Clear();
}
 ::PBF::Relation_MemberType Relation::types(int index) const {
  // @@protoc_insertion_point(field_get:PBF.Relation.types)
  return static_cast< ::PBF::Relation_MemberType >(types_.Get(index));
}
 void Relation::set_types(int index, ::PBF::Relation_MemberType value) {
  assert(::PBF::Relation_MemberType_IsValid(value));
  types_.Set(index, value);
  // @@protoc_insertion_point(field_set:PBF.Relation.types)
}
 void Relation::add_types(::PBF::Relation_MemberType value) {
  assert(::PBF::Relation_MemberType_IsValid(value));
  types_.Add(value);
  // @@protoc_insertion_point(field_add:PBF.Relation.types)
}
 const ::google::protobuf::RepeatedField<int>&
Relation::types() const {
  // @@protoc_insertion_point(field_list:PBF.Relation.types)
  return types_;
}
 ::google::protobuf::RepeatedField<int>*
Relation::mutable_types() {
  // @@protoc_insertion_point(field_mutable_list:PBF.Relation.types)
  return &types_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace PBF

// @@protoc_insertion_point(global_scope)
