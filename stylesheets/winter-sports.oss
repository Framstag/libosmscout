OSS
/*
  See http://libosmscout.sourceforge.net/documentation/stylesheet/
  for an description of the style sheet syntax.
 */

/*
  Some general rules in the design of this specific style sheet:

  Labels:
  * A possible icon will always show on top
  * The main label (the name of the object) will always be shown below the icon (else on top)
  * A possible additional label (height of a peak) will be placed below the main label.
*/

FLAG
  daylight          = true;
  waterway          = true;
  wood              = true;
  elevationContours = true;

  IF daylight {
    _natural         = true;
    _railway         = true;
    _leisure         = true;
    _building        = true;
    _minorBuilding   = true;
  }
  ELSE {
    _natural         = false;
    _railway         = false;
    _leisure         = false;
    _building        = false;
    _minorBuilding   = false;
  }

ORDER WAYS
  GROUP _route
  GROUP highway_motorway
  GROUP highway_motorway_trunk
  GROUP highway_motorway_primary
  GROUP highway_trunk
  GROUP aerialway_gondola, aerialway_chair_lift, aerialway_drag_lift
  GROUP highway_primary
  GROUP highway_secondary
  GROUP highway_tertiary
  GROUP highway_motorway_link, highway_trunk_link, highway_primary_link, highway_secondary_link, highway_tertiary_link
  GROUP highway_unclassified, highway_road, highway_residential
  GROUP railway_rail,
        aeroway_runway, aeroway_taxiway
  GROUP highway_living_street, highway_service, highway_bus_guideway,
        railway_tram, railway_light_rail, railway_subway, public_transport_platform,
        railway_narrow_gauge, railway_preserved
  GROUP highway_track, highway_pedestrian, highway_path, highway_cycleway,
        highway_footway, highway_bridleway, highway_construction,
        leisure_track
  GROUP highway_steps, barrier_fence
  GROUP waterway_weir, route_ferry
  GROUP waterway_river, waterway_canal, waterway_drain, waterway_ditch, waterway_stream
  GROUP piste_downhill_easy, piste_downhill_intermediate, piste_downhill_advanced
  GROUP elevation_contour_major, elevation_contour_medium, elevation_contour_minor

CONST
  MAG stepsMag                     = veryClose;
  MAG labelPathsMag                = veryClose;

  MAG specialBuildingMag           = close;
  MAG labelSpecialBuildingMag      = closer;

  MAG buildingMag                  = closer;
  MAG labelBuildingMag             = veryClose;

  MAG minorBuildingMag             = veryClose;

  // road width
  WIDTH motorwayWidth               = 20m;
  WIDTH trunkWidth                  = 18m;
  WIDTH primaryWidth                = 14m;
  WIDTH secondaryWidth              = 12m;
  WIDTH tertiaryWidth               = 10m;
  WIDTH roadWidth                   =  8m;
  WIDTH wayWidth                    =  8m;

  // Label priorities
  UINT labelPrioContinent           = 1;
  UINT labelPrioIsland              = 1;
  UINT labelPrioCountry             = 2;
  UINT labelPrioState               = 3;
  UINT labelPrioRegion              = 4;
  UINT labelPrioCounty              = 5;
  UINT labelPrioMillionCity         = 6;
  UINT labelPrioBigCity             = 7;
  UINT labelPrioCity                = 8;

  UINT labelShieldMotorway          = 9;
  UINT labelShieldTrunk             = 11;
  UINT labelShieldPrimary           = 11;

  UINT labelPrioTown                = 12;
  UINT labelPrioVillage             = 13;
  UINT labelPrioHamlet              = 14;
  UINT labelPrioSuburb              = 15;
  UINT labelPrioLocality            = 16;

  UINT labelPrioPiste               = 17;
  UINT labelPrioAeroway             = 17;
  UINT labelPrioFerry               = 17;
  UINT labelPrioPublicTransportWay  = 17;
  UINT labelPrioHighway             = 18;
  UINT labelPrioOtherWays           = 19;

  UINT labelPrioNatural             = 20;
  UINT labelPrioLanduse             = 25;
  UINT labelPrioLeisure             = 26;

  UINT labelPrioPeak                = 29;

  UINT labelPrioHighwayServices     = 34;
  UINT labelPrioRailwayStation      = 35;

  UINT labelPrioSpecialBuilding     = 37;
  UINT labelPrioMajorBuilding       = 38;

  UINT labelPrioRailwayHalt         = 40;
  UINT labelPrioTramHalt            = 40;

  UINT labelPrioHighwayArea         = 43;

  UINT labelPrioAmenity             = 45;
  UINT labelPrioShop                = 50;
  UINT labelPrioHistoric            = 51;
  UINT labelPrioOffice              = 52;

  UINT labelPrioHighwayJunction     = 55;

  UINT labelPrioBuilding            = 100;

  UINT labelPrioElevationContour    = 500;

  // For debugging :-)
  COLOR red                        = #ff0000;

  // Default label color
  IF daylight {
    COLOR labelColor               = #000000;
    COLOR emphasizeColor           = #ffffff;
  }
  ELSE {
    COLOR labelColor               = #a0a0a0;
    COLOR emphasizeColor           = #707070;
  }

  // Ground tiles

  IF daylight {
    COLOR waterColor               = #85bdd6;
    COLOR waterLabelColor          = darken(@waterColor, 0.5);
    COLOR landColor                = #f1eee9;
    COLOR unknownColor             = @waterColor;
  }
  ELSE {
    COLOR waterColor               = darken(#9acffd, 0.5);
    COLOR waterLabelColor          = darken(@waterColor, 0.5);
    COLOR landColor                = #333333;
    COLOR unknownColor             = #000000;
  }

  // Borders
  COLOR countryBorderColor         = #ff0000;

  // Contour
  COLOR majorContourColor          = #9f9f9f;
  COLOR mediumContourColor         = #a5a5a5;
  COLOR minorContourColor          = #aaaaaa;
  COLOR contourLabelColor          = #505050;

  // Landuse, water
  IF daylight {
    COLOR allotmentsColor          = #c8b084;
  }
  ELSE {
    COLOR allotmentsColor          = darken(#c8b084,0.5);
  }

  COLOR beachColor                 = #eecc55;

  COLOR brownFieldColor            = #b6b592;//#ebd7fe;
  COLOR brownFieldLabelColor       = darken(@brownFieldColor, 0.5);

  COLOR cemeteryColor              = #a9caae;
  COLOR commercialColor            = #efc8c8;
  COLOR constructionColor          = #9d9d6c;

  COLOR farmColor                  = #e5f5f4;
  COLOR farmyardColor              = #f0e4d1;
  COLOR fellColor                  = #f9f9f9;

  IF daylight {
    COLOR woodColor                = #acc3c4;
  }
  ELSE {
    COLOR woodColor                = darken(#acc3c4, 0.5);
  }
  COLOR woodLabelColor             = darken(@woodColor, 0.5);

  COLOR glacierColor               = #ddecec;
  COLOR grassColor                 = #e7f3ef;
  COLOR greenFieldColor            = #dcdcc8;
  COLOR heathColor                 = #ffffc0;
  COLOR industrialColor            = #dfd1d6;
  COLOR damColor                   = #b2a7ab;

  IF daylight {
    COLOR landFillColor            = #b6b591;
  }
  ELSE {
    COLOR landFillColor            = darken(#b6b591, 0.5);
  }

  COLOR marshColor                 = #efe8ff;

  COLOR quarryColor                = #b3b3b3;
  COLOR recreationColor            = #bce2ca;

  IF daylight {
    COLOR residentialColor         = #ebebeb;
  }
  ELSE {
    COLOR residentialColor         = darken(#ebebeb, 0.5);
  }
  COLOR residentialLabelColor      = darken(@residentialColor, 0.5);

  COLOR retailColor                = #feeaea;
  COLOR retailLabelColor           = darken(@retailColor, 0.5);

  COLOR scrubColor                 = #c9d9cf;
  COLOR vineyardColor              = #b3e2a8;
  COLOR wetlandColor               = #bdd8d8;

  COLOR peakSymbolColor            = #9c5e29;
  COLOR peakLabelColor             = #9c5329;

  // Ways
  COLOR bridgeColor                = #000000; // black
  COLOR cyclewayColor              = #ec47c7;

  IF daylight {
    COLOR motorwayColor            = #4440ec; // dark blue
    COLOR trunkColor               = #7674ec; // lighther blue
    COLOR primaryColor             = #f38689; // red
    COLOR secondaryColor           = #fecb8b; // orange
    COLOR tertiaryColor            = #fef7ae; // yelow
    COLOR roadColor                = #ffffff; // white
    COLOR roadBColor               = #b1a095;
    COLOR livingStreetColor        = #bababa; // grey
    COLOR pedestrianColor          = #ededed;

    COLOR wayLabelColor            = #000000; // black
  }
  ELSE {
    COLOR motorwayColor            = darken(#4440ec, 0.3);
    COLOR trunkColor               = darken(#7674ec, 0.3);
    COLOR primaryColor             = darken(#ec4044, 0.3);
    COLOR secondaryColor           = darken(#fdac44, 0.3);
    COLOR tertiaryColor            = darken(#fef271, 0.3);
    COLOR roadColor                = darken(#ffffff, 0.5);
    COLOR roadBColor               = darken(#bfbfbf, 0.5);
    COLOR livingStreetColor        = darken(#bababa, 0.5);
    COLOR pedestrianColor          = darken(#ededed, 0.7);

    COLOR wayLabelColor            = #cccccc;
  }

  COLOR thinRoadColor              = #a08080;
  COLOR thinMotorwayColor          = lighten(@motorwayColor,0.3);
  COLOR thinTrunkColor             = lighten(@trunkColor,0.3);
  COLOR thinPrimaryColor           = lighten(@primaryColor,0.3);
  COLOR thinSecondaryColor         = #fdd654;
  COLOR thinTertiaryColor          = #fefe73;

  COLOR motorwayShieldColor        = @motorwayColor;
  COLOR motorwayJunctionLabelColor = lighten(@motorwayColor, 0.5);
  COLOR trunkShieldColor           = @trunkColor;
  COLOR primaryShieldColor         = @primaryColor;

  COLOR viaFerrataEasyColor        = darken(#fdac44, 0.4);
  COLOR viaFerrataModerateColor    = #fdac44;
  COLOR viaFerrataDifficultColor   = #ec4044;
  COLOR viaFerrataExtremeColor     = #ff0000;

  // Buildings
  COLOR buildingColor              = #d9d9d9;
  COLOR buildingBorderColor        = darken(@buildingColor, 0.3);
  COLOR buildingLabelColor         = darken(@buildingColor, 0.5);

  // Travel
  COLOR onewayArrowColor           = #00000028;

  COLOR busSymbolColor             = #7885b0;

  COLOR railwayColor               = #bb75d9;
  COLOR railwaySymbolColor         = @railwayColor;
  COLOR railwayLabelColor          = darken(@railwayColor, 0.5);
  COLOR railwayStationColor        = @railwayColor;

  // Leisure

  COLOR natureReserveColor         = #abde9622;
  COLOR natureReserveLabelColor    = #566f4bb0;
  COLOR natureReserveBorderColor   = #82a77180;

  COLOR playgroundColor            = #ccffff;
  COLOR playgroundBorderColor      = darken(@playgroundColor, 0.3);

  COLOR pitchColor                 = #90d3b9;
  COLOR pitchBorderColor           = #b0b0b0;
  COLOR pitchLabelColor            = darken(@pitchColor,0.5);

  // Amenity
  IF daylight {
    COLOR amenityColor             = #f0f0d8;
    COLOR amenityBuildingColor     = #d9b8b8;
  }
  ELSE {
    COLOR amenityColor             = darken(#f0f0d8, 0.5);
    COLOR amenityBuildingColor     = darken(#d9b8b8, 0.5);
  }
  COLOR amenitySymbolColor         = darken(@amenityColor, 0.4);
  COLOR amenityLabelColor          = darken(@amenityBuildingColor, 0.5);
  COLOR amenityBuildingBorderColor = darken(@amenityBuildingColor, 0.3);

  IF daylight {
    COLOR parkingColor             = #f6eeb6;
    COLOR parkingBuildingColor     = #c4c393;
  }
  ELSE {
    COLOR parkingColor             = darken(#f6eeb6, 0.5);
    COLOR parkingBuildingColor       = darken(#c4c393, 0.5);
  }
  COLOR parkingBorderColor         = darken(@parkingColor, 0.3);
  COLOR parkingBuildingBorderColor = darken(@parkingBuildingColor, 0.3);

  COLOR hospitalSymbolColor        = #da0092;
  COLOR hospitalColor              = darken(@amenityColor, 0.1);
  COLOR hospitalBorderColor        = darken(@hospitalColor, 0.3);
  COLOR hospitalBuildingColor      = darken(@amenityBuildingColor, 0.1);
  COLOR hospitalBuildingBorderColor = darken(@hospitalBuildingColor, 0.3);

  COLOR pharmacySymbolColor        = #da0092;

  COLOR postColor                  = #e8f000;
  COLOR postSymbolColor            = #e8f000;
  COLOR postBuildingColor          = #d2d900;
  COLOR postBuildingBorderColor    = darken(@postBuildingColor, 0.3);
  COLOR postLabelColor             = darken(@postColor, 0.5);

  COLOR wallColor                  = #663e1b;

MODULE "include/symbols"
MODULE "include/route"
MODULE "include/land_sea"
MODULE "include/roads"
MODULE "include/man_made"

MODULE "include/aeroway"
MODULE "include/historic"
MODULE "include/military"
MODULE "include/office"
MODULE "include/religious"
MODULE "include/shop"
MODULE "include/tourism"

STYLE

  // -------------------------------------------------------
  //
  // contour lines
  //

  IF elevationContours {
    [MAG suburb-] {
      [TYPE elevation_contour_major] {
        WAY {color: @majorContourColor; displayWidth: 0.150mm; }
        WAY.TEXT { label: Ele.inLocaleUnit; color: @contourLabelColor; size: 0.7; priority: @labelPrioElevationContour; }
      }
    }

    [MAG detail-] {
      [TYPE elevation_contour_medium] {
        WAY {color: @mediumContourColor; displayWidth: 0.100mm; }
        WAY.TEXT { label: Ele.inLocaleUnit; color: @contourLabelColor; size: 0.8; priority: @labelPrioElevationContour; }
      }

      [TYPE elevation_contour_minor] {
        WAY {color: @minorContourColor; displayWidth: 0.075mm; }
      }
    }
  }

  // -------------------------------------------------------
  //
  // natural_* (without coastline)
  //

  IF _natural {
    [MAG state-] {
      [TYPE natural_glacier] AREA { color: @glacierColor; }
      [TYPE natural_grassland] AREA { color: @grassColor; }
      [TYPE natural_fell] AREA { color: @fellColor; }
      [TYPE natural_heath] AREA { color: @heathColor; }
      [TYPE natural_wetland_marsh] AREA { color: @marshColor; }
      [TYPE natural_wetland, natural_wetland_tidalflat] AREA { color: @wetlandColor; }
      [TYPE natural_water] AREA { color: @waterColor; }
      [TYPE natural_land] AREA { color: @landColor; }
    }

    [MAG city-] {
      [TYPE natural_beach] AREA { color: @beachColor; }
      [TYPE natural_scrub] AREA { color: @scrubColor; }
    }

    [MAG detail-] {
      [TYPE natural_glacier,
            natural_fell,
            natural_grassland,
            natural_heath,
            natural_scrub,
            natural_wetland,
            natural_wetland_marsh,
            natural_wetland_tidalflat,
            natural_beach,
            natural_land] AREA.TEXT { label: Name.name ; priority: @labelPrioNatural; autoSize: true;}

      [TYPE natural_water] AREA.TEXT { label: Name.name ; priority: @labelPrioNatural; color: @waterLabelColor; autoSize: true;}

      [TYPE natural_peak] {
        NODE.TEXT#peakName { label: Name.name; style: emphasize; color: @peakLabelColor; priority: @labelPrioPeak; size: 0.9; position: 1; }
        NODE.TEXT#ele { label: Ele.inLocaleUnit; style: emphasize; color: @peakLabelColor; priority: @labelPrioPeak; size: 0.9; position: 2;}
      }
    }

    [MAG city-] {
      [TYPE natural_peak] NODE.ICON { symbol: natural_peak; }
    }
  }

  IF wood {
    [MAG stateOver-] {
      [TYPE wood] AREA { color: @woodColor; }
    }

    [MAG detail-] {
      [TYPE wood] {
        AREA.TEXT { label: Name.name ; priority: @labelPrioNatural; color: @woodLabelColor; autoSize: true;}
      }
    }
  }

  // -------------------------------------------------------
  //
  // waterway_*
  //

  IF waterway {
    [MAG proximity-] {
      [TYPE waterway_river,
            waterway_canal] {
        [SIZE 15m 0.25mm:3px<] {
          WAY {color: @waterColor; width: 15m;}

          [FEATURE Tunnel] {
            WAY#ldash {color: @waterColor; dash: 3,3; displayWidth: 0.3mm; offset: -7.5m; priority: 1; }
            WAY#rdash {color: @waterColor; dash: 3,3; displayWidth: 0.3mm; offset: 7.5m; priority: 1;}

            WAY {color: #f2f6f6; width: 15m;}
          }
        }

        [SIZE 15m <0.25mm:3px] {
          WAY {color: @waterColor; displayWidth: 0.25mm; }

          [FEATURE Tunnel] {
            WAY {color: #ff000000;}
          }
        }

        AREA { color: @waterColor;}
      }

    }

    [MAG suburb-] {
      [TYPE waterway_dock,
            waterway_riverbank] AREA { color: @waterColor; }

      [TYPE waterway_stream] {
        [SIZE 2m 0.25mm:3px<] WAY {color: @waterColor; width: 2m;}
        [SIZE 2m <0.25mm:3px] WAY {color: @waterColor; displayWidth: 0.25mm;}

        [FEATURE Tunnel] {
          WAY { dash: 0.4,4;}
        }
      }
    }

    [MAG detail-] {
      [TYPE waterway_drain,
            waterway_ditch] {
        [SIZE 3m 0.1mm:3px<] WAY {color: @waterColor; width: 3m;}
        [SIZE 3m <0.1mm:3px] WAY {color: @waterColor; displayWidth: 0.1mm; }

        AREA { color: @waterColor;}
      }
      [TYPE waterway_weir] {
        WAY {color: lighten(@waterColor, 0.3); width: 3m; dash: 0.5,2;}

        AREA { color: lighten(@waterColor, 0.3);}
      }
    }

    // Labels

    [MAG proximity-] {
      [TYPE waterway_dock] AREA.TEXT { label: Name.name; priority: 25; color: @waterLabelColor; autoSize: true;}
    }

    [MAG veryClose-] {
      [TYPE waterway_stream,
            waterway_drain,
            waterway_ditch,
            waterway_weir,
            waterway_river,
            waterway_canal]
        WAY.TEXT { label: Name.name; color: @waterLabelColor; priority: @labelPrioNatural; }

      [TYPE waterway_stream,
            waterway_river,
            waterway_canal]
        WAY.SYMBOL {symbol: stream_arrow; symbolSpace: 50mm;}

      [TYPE waterway_riverbank] AREA.TEXT { label: Name.name; priority: 25; color: @waterLabelColor;}
    }
  }

 // -------------------------------------------------------
 //
 // aerialway_* for low zoom
 //

 [MAG close-] {
   [TYPE aerialway_gondola,
         aerialway_chair_lift,
         aerialway_drag_lift] WAY.TEXT { label: Name.name; size: 1.0; color: @railwayLabelColor; displayOffset: 2.5mm; priority: @labelPrioPublicTransportWay;}
 }

 // -------------------------------------------------------
 //
 // railway
 //

 IF _railway {
   [MAG suburb-] {
     [TYPE railway_rail] {
       [SIZE 5m 0.25mm:3px<] {
         WAY#outline { color: #b3b3b3; width: 5m; displayWidth: 0.5mm; priority: -1; joinCap: butt; endCap: butt; }
         WAY {color: #505050; dash: 3,3; joinCap: butt; endCap: butt; gapColor: #ffffff; width: 5m;}
       }
       [SIZE 5m <0.25mm:3px] WAY {color: #404040; dash: 3,3; joinCap: butt; endCap: butt; gapColor: #ffffff; displayWidth: 0.25mm;}
     }
   }

   [MAG close-] {
     [TYPE railway_disused] WAY {color: #939393; dash: 1.5,1.5; joinCap: butt; endCap: butt; displayWidth: 0.2mm; width: 4m;}

     [TYPE railway_tram] WAY {color: #303030; displayWidth: 0.25mm; width: 5m;}
     [TYPE railway_light_rail] WAY {color: #808080; displayWidth: 0.25mm; width: 5m;}
     [TYPE railway_narrow_gauge, railway_preserved] WAY {color: #808080; displayWidth: 0.20mm; width: 4m;}
     [TYPE railway_funicular] WAY {color: #808080; displayWidth: 0.20mm; width: 4m;}

     [TYPE railway_subway] {
       WAY {color: #b3b3b3; dash: 1.5,1.5; displayWidth: 0.4mm; joinCap: butt; endCap: butt; }
     }
   }

   [MAG closer-] {
     [TYPE railway_tram,
           railway_light_rail,
           railway_narrow_gauge,
           railway_preserved,
           railway_funicular
         SIZE 5m 0.25mm:3px<] {
       [FEATURE Tunnel] {
         WAY {dash: 1,1; joinCap: butt; endCap: butt;}
       }
       [FEATURE Bridge] {
         WAY#lbridge {color: @bridgeColor; displayWidth: 0.2mm; offset: -2.5m; displayOffset: -0.25mm;}
         WAY#rbridge {color: @bridgeColor; displayWidth: 0.2mm; offset: 2.5m; displayOffset: 0.25mm;}
       }
     }
     [TYPE railway_rail SIZE 5m 0.25mm:3px<] {
       // Better rendering?
       [FEATURE Tunnel] {
         WAY#outline { dash: 0.5,0.5; }
       }

       [FEATURE Bridge] {
         WAY#lbridge {color: @bridgeColor; displayWidth: 0.2mm; offset: -2.5m; displayOffset: -0.25mm;}
         WAY#rbridge {color: @bridgeColor; displayWidth: 0.2mm; offset: 2.5m; displayOffset: 0.25mm;}
       }
     }

   }

   [MAG veryClose-] {
     [TYPE railway_halt] NODE.ICON { symbol: railway_halt;}

     [TYPE railway_tram_stop] NODE.ICON { symbol: railway_tram_stop;}
   }

   // Labels

   [MAG suburb-] {
   }

   [MAG close-] {
     [TYPE railway_station] NODE.TEXT {label: Name.name; style: emphasize; color: @railwayLabelColor; priority: @labelPrioRailwayStation; }
   }

   [MAG veryClose-] {
     [TYPE railway_halt] NODE.TEXT {label: Name.name; style: emphasize; color: @railwayLabelColor; priority: @labelPrioRailwayHalt;}
     [TYPE railway_tram_stop] NODE.TEXT {label: Name.name; style: emphasize; color: @railwayLabelColor; priority: @labelPrioTramHalt; }
   }

   [MAG @labelPathsMag-] {
     [TYPE railway_rail,
           railway_tram,
           railway_light_rail,
           railway_narrow_gauge,
           railway_preserved,
           railway_funicular,
           railway_subway,
           public_transport_platform] WAY.TEXT { label: Name.name; size: 0.8; color: @railwayLabelColor; priority: @labelPrioPublicTransportWay; }

     [TYPE public_transport_platform] AREA.TEXT { label: Name.name; color: #524a4a; size: 0.8; priority: @labelPrioTramHalt; }
   }
 }

 // -------------------------------------------------------
 //
 // Landuse
 //

 IF daylight {
   [MAG region-] {
     [TYPE landuse_farmland] AREA { color: @farmColor; }
     [TYPE landuse_greenfield] AREA { color: @greenFieldColor; }
     [TYPE landuse_industrial] AREA { color: @industrialColor; }
     [TYPE landuse_landfill] AREA { color: @landFillColor; }
     [TYPE landuse_quarry] AREA { color: @quarryColor; }
     [TYPE landuse_reservoir] AREA { color: @waterColor; }
     [TYPE landuse_residential] AREA { color: @residentialColor; }
     [TYPE landuse_recreation_ground] AREA { color: @recreationColor; }
   }

   [MAG city-] {
     [TYPE landuse_basin] {
        AREA { color: @waterColor; }
        AREA.BORDER { color: #887b7b; width: 0.1mm; }
     }
     [TYPE landuse_farmyard] AREA { color: @farmyardColor; }
     [TYPE landuse_allotments] AREA { color: @allotmentsColor; }
     [TYPE landuse_vineyard] AREA { color: @vineyardColor; }
     [TYPE landuse_railway] AREA { color: #dcdcc8; }
     [TYPE landuse_cemetery] AREA { color: @cemeteryColor; pattern: "cemetery"; patternMinMag: detail; }
   }

   [MAG suburb-] {
     [TYPE landuse_commercial] AREA { color: @commercialColor; }
     [TYPE landuse_brownfield] AREA { color: @brownFieldColor; }
     [TYPE landuse_construction] AREA { color: @constructionColor; }
     [TYPE landuse_retail] {
        AREA { color: @retailColor; }
        AREA.BORDER { color: #c5a0a0; width: 0.1mm; }
     }
   }

   [MAG close-] {
     [TYPE landuse_grass] AREA { color: @grassColor; }

     [TYPE landuse_orchard,
           landuse_meadow,
           landuse_village_green] AREA { color: #fafdf7; }
   }

   // Labels
   [MAG suburb-] {
     [TYPE landuse_brownfield] AREA.TEXT { label: Name.name; priority: @labelPrioLanduse; color: @brownFieldLabelColor; autoSize: true;}
     [TYPE landuse_residential] AREA.TEXT { label: Name.name; priority: @labelPrioLanduse; color: @residentialLabelColor; autoSize: true;}
     [TYPE landuse_retail] AREA.TEXT { label: Name.name; priority: @labelPrioLanduse; color: @retailLabelColor; autoSize: true;}
   }

   [MAG close-] {
     [TYPE landuse_farmland,
           landuse_farmyard,
           landuse_quarry,
           landuse_landfill,
           landuse_basin,
           landuse_reservoir,
           landuse_vineyard,
           landuse_grass,
           landuse_greenfield,
           landuse_orchard,
           landuse_cemetery,
           landuse_commercial,
           landuse_meadow,
           landuse_recreation_ground] AREA.TEXT { label: Name.name; priority: @labelPrioLanduse; autoSize: true;}

     [TYPE landuse_industrial,
           landuse_allotments] AREA.TEXT { label: Name.name; style: emphasize; priority: @labelPrioLanduse; autoSize: true;}
   }

   [MAG veryClose-] {
     [TYPE landuse_railway,
           landuse_construction,
           landuse_village_green] AREA.TEXT { label: Name.name;  priority: @labelPrioLanduse; autoSize: true; }
   }
 }

 // -------------------------------------------------------
 //
 // Leisure
 //

 IF _leisure {
   [MAG county-] {
     [TYPE leisure_pitch,
           leisure_fitness_station] {
       AREA { color: @pitchColor; }
       AREA.BORDER { color: @pitchBorderColor; width: 0.1mm; }
     }
     [TYPE leisure_water_park] {
       AREA { color: #f1eee8; }
       AREA.BORDER { color: #887b7b; width: 0.1mm; }
     }
     [TYPE leisure_park] AREA { color: #dbf5e0; }
     [TYPE leisure_common] AREA { color: #bde3cb; }

     [TYPE leisure_marina,
           leisure_fishing] AREA.BORDER { color: #b5d6f1; width: 0.3mm; dash: 6,6; }

     [TYPE leisure_marina,
           leisure_fishing] AREA { color: #b5d6f180; }

     [TYPE leisure_ice_rink] AREA { color: #b5d6f1; }
   }

   [TYPE boundary_protected_area] {
     [MAG stateOver-]{
       AREA.BORDER#dashed { color: @natureReserveBorderColor; width: 0.3mm; dash: 6,6; displayOffset: -0.5mm; }
       AREA.BORDER#solid { color: lighten(@natureReserveBorderColor, 0.3); width: 1.0mm; }
     }
     [MAG stateOver-detail]{
       AREA.TEXT { label: Name.name; priority: @labelPrioNatural; color: @natureReserveLabelColor; autoSize: true;}
     }
     // Semiransparent overlay just for low zoom
     [MAG stateOver-proximity]{
       AREA { color: @natureReserveColor;}
     }
   }

   [MAG city-] {
     // Semiransparent overlay
     [TYPE leisure_nature_reserve] {
       AREA { color: @natureReserveColor; }
       AREA.BORDER { color: @natureReserveBorderColor; width: 0.2mm;}
       AREA.TEXT { label: Name.name; priority: @labelPrioNatural; color: @natureReserveLabelColor; autoSize: true;}
     }
   }

   [MAG cityOver-] {
     [TYPE leisure_golf_course] AREA { color: #e9fadc; }
   }

   [MAG detail-] {
     [TYPE leisure_track] AREA { color: #7fdac2; }
   }

   [MAG close-] {
     [TYPE leisure_playground] {
       AREA { color: @playgroundColor; }
       AREA.BORDER { color: @playgroundBorderColor; width: 0.1mm;}
     }
     [TYPE leisure_garden] AREA { color: #eff9e2; }
   }

   // Labels

   [MAG close-] {
     [TYPE leisure_sports_centre,
           leisure_golf_course,
           leisure_stadium,
           leisure_track,
           leisure_water_park,
           leisure_marina,
           leisure_fishing,
           leisure_park,
           leisure_playground,
           leisure_garden,
           leisure_common,
           leisure_ice_rink] AREA.TEXT { label: Name.name; priority: @labelPrioLeisure; autoSize: true; }
   }
 }

// Aerialways
[MAG city-] {
     [TYPE aerialway_gondola]{
        WAY {color: #202020; displayWidth: 0.08mm; width: 1m;}
        WAY#gondola {color: #101010; dash: 1,15; joinCap: round; endCap: round; displayWidth: 0.15mm; width: 4m;}
     }
     [TYPE aerialway_chair_lift]{
        WAY {color: #202020; displayWidth: 0.08mm; width: 1m;}
        WAY#chair {color: #101010; dash: 0.3,5; joinCap: square; endCap: square; displayWidth: 0.15mm; width: 4m;}
     }
     [TYPE aerialway_drag_lift]{
        WAY {color: #202020; displayWidth: 0.04mm; width: 0.5m;}
        WAY#drag {color: #101010; dash: 0.2,5; joinCap: round; endCap: round; displayWidth: 0.15mm; width: 4m;}
     }
}

 // Pistes
 [MAG city-] {
     [TYPE piste_downhill_easy]{
        WAY {color: #5050ff; displayWidth: 0.5mm; width: 20m;}
        AREA {color: #5050ff80; }
        AREA.BORDER { color: #5050ff; width: 0.3mm; }
     }
     [TYPE piste_downhill_intermediate]{
        WAY {color: #ff5050; displayWidth: 0.5mm; width: 20m;}
        AREA {color: #ff505080; }
        AREA.BORDER { color: #ff5050; width: 0.3mm; }
     }
     [TYPE piste_downhill_advanced]{
        WAY {color: #606060; displayWidth: 0.5mm; width: 20m;}
        AREA {color: #60606080; }
        AREA.BORDER { color: #606060; width: 0.3mm; }
     }
 }
 [MAG close-]{
     [TYPE piste_downhill_easy]{
        WAY.TEXT { label: Name.name; size: 1.0; color: #3030ff; displayOffset: 2.5mm; priority: @labelPrioPiste; }
        AREA.TEXT { label: Name.name; size: 1.0; color: #3030ff; }
     }
     [TYPE piste_downhill_intermediate]{
        WAY.TEXT { label: Name.name; size: 1.0; color: #ff3030; displayOffset: 2.5mm; priority: @labelPrioPiste; }
        AREA.TEXT { label: Name.name; size: 1.0; color: #ff3030; }
     }
     [TYPE piste_downhill_advanced]{
        WAY.TEXT { label: Name.name; size: 1.0; color: #505050; displayOffset: 2.5mm; priority: @labelPrioPiste; }
        AREA.TEXT { label: Name.name; size: 1.0; color: #505050; }
     }
 }

 // Buildings
 [MAG @specialBuildingMag-] {
   [TYPE amenity_hospital_building] {
       AREA { color: @hospitalBuildingColor; }
       AREA.BORDER { color: @hospitalBuildingBorderColor; width: 0.1mm; }
   }
   [TYPE railway_station] AREA { color: @railwayStationColor; }
   [TYPE leisure_stadium] AREA { color: #33cb98; }
 }

 IF _building {
   [MAG @buildingMag-] {
     [TYPE landuse_farmyard_building] {
        AREA { color: #bcbcbc; }
        AREA.BORDER { color: #887b7b; width: 0.1mm; }
     }

     [TYPE power_sub_station] AREA { color: #bca9a9; }

     [TYPE sport_building] {
       AREA { color: #b89c9c; }
       AREA.BORDER { color: #887b7b; width: 0.1mm; }
     }

     [TYPE leisure_sports_centre,
           leisure_building] {
           AREA { color: @buildingColor; }
           AREA.BORDER { color: @buildingBorderColor; width: 0.1mm; }
     }

     // Amenity buildings

     [TYPE amenity_post_office_building] {
        AREA { color: @postBuildingColor; }
        AREA.BORDER { color: @postBuildingBorderColor; width: 0.1mm; }
     }

     [TYPE amenity_building,
           amenity_bank_building,
           amenity_cafe_building,
           amenity_fast_food_building,
           amenity_fuel_building,
           amenity_kindergarten_building,
           amenity_restaurant_building,
           amenity_pub_building,
           amenity_bar_building,
           amenity_school_building] {
           AREA { color: @amenityBuildingColor; }
           AREA.BORDER { color: @amenityBuildingBorderColor; width: 0.1mm;}
     }

     [TYPE amenity_parking_building] {
       AREA { color: @parkingBuildingColor; }
       AREA.BORDER { color: @parkingBuildingBorderColor; width: 0.1mm; }
     }

     [TYPE building] {
        AREA { color: @buildingColor; }
        AREA.BORDER { color: @buildingBorderColor; width: 0.1mm; }
     }
   }
 }

 IF _minorBuilding {
   [MAG @minorBuildingMag-] {
     [TYPE building_garage] AREA { color: #bcbcbc; }
   }
 }

 // Labels

 [MAG @labelSpecialBuildingMag-] {
   [TYPE railway_station] AREA.TEXT { label: Name.name; style: emphasize; color: @railwayLabelColor;}

   [TYPE amenity_hospital_building,
         amenity_hospital] {
     NODE.TEXT {label: Name.name; style: emphasize; color: #da0092; size: 1.0; priority: @labelPrioSpecialBuilding;}
     AREA.TEXT { label: Name.name; style: emphasize; color: #da0092; size: 1.0; priority: @labelPrioSpecialBuilding;}
   }
 }

 IF _building {
   [MAG @labelBuildingMag-] {
     [FEATURE Address] {
       NODE.TEXT#address { label: Address.name; color: @buildingLabelColor; size: 0.7; priority: @labelPrioBuilding; position: 1; }
       AREA.TEXT#address { label: Address.name; color: @buildingLabelColor; size: 0.7; priority: @labelPrioBuilding; position: 1; }
     }

     [TYPE building] {
       AREA.TEXT#buildingName { label: Name.name; color: @buildingLabelColor; size: 0.7; priority: @labelPrioBuilding; }
     }

     [TYPE leisure_building,
           sport_building] AREA.TEXT { label: Name.name; priority: @labelPrioSpecialBuilding; }

     [TYPE leisure_pitch,
           leisure_fitness_station] AREA.TEXT { label: Name.name; style: emphasize; color: @pitchLabelColor; size: 0.9;}

     [TYPE amenity_school_building,
           amenity_school] AREA.TEXT { label: Name.name; style: emphasize; color: #000000; size: 0.9; priority: @labelPrioMajorBuilding; }


     [TYPE landuse_farmyard_building] AREA.TEXT { label: Name.name; priority: @labelPrioLanduse; }

     [TYPE leisure_building,
           sport_building] AREA.TEXT { label: Name.name;  priority: @labelPrioSpecialBuilding;}

     [TYPE power_sub_station,
           power_generator] {
       NODE.TEXT {label: Name.name; style: emphasize;color: #000000; size: 0.9;  priority: @labelPrioMajorBuilding;}
       AREA.TEXT { label: Name.name; style: emphasize; color: #000000; size: 0.9;  priority: @labelPrioMajorBuilding;}
     }

     [TYPE amenity,
           amenity_building,
           amenity_bank_building,
           amenity_bank,
           amenity_cafe_building,
           amenity_cafe,
           amenity_fast_food_building,
           amenity_fast_food,
           amenity_fuel,
           amenity_fuel_building,
           amenity_kindergarten_building,
           amenity_kindergarten,
           amenity_restaurant_building,
           amenity_restaurant,
           amenity_pub_building,
           amenity_pub,
           amenity_bar_building,
           amenity_bar,
           amenity_school_building,
           amenity_school,
           amenity_taxi] {
       NODE.TEXT {label: Name.name; style: emphasize;color: @amenityLabelColor; size: 0.9; priority: @labelPrioAmenity; }
       AREA.TEXT { label: Name.name; style: emphasize; color: @amenityLabelColor; size: 0.9; priority: @labelPrioAmenity; }
     }

     [TYPE amenity_pharmacy] NODE.TEXT {label: Name.name; style: emphasize; color: #da0092; size: 0.9; priority: @labelPrioMajorBuilding;}

     [TYPE amenity_post_office,
           amenity_post_office_building] {
       NODE.TEXT {label: Name.name; style: emphasize;color: @postLabelColor; size: 0.9;  priority: @labelPrioSpecialBuilding;}
       AREA.TEXT { label: Name.name; style: emphasize; color: @postLabelColor; size: 0.9;  priority: @labelPrioSpecialBuilding;}
     }

     [TYPE amenity_parking,
           amenity_parking_building] AREA.TEXT { label: Name.name; style: emphasize; color: #4bb2da; size: 0.9; priority: @labelPrioMajorBuilding; }
   }
 }

 // -------------------------------------------------------
 //
 // Places
 //

 [MAG world-continent] {
   [TYPE place_continent] NODE.TEXT {label: IName; style: emphasize; size: 1.6; color: #00000080; priority: @labelPrioContinent; }
 }
 [MAG 2-] { [TYPE place_continent] NODE.TEXT { size: 4; color: #00000060; }}
 [MAG continent-] { [TYPE place_continent] NODE.TEXT { size: 6; color: #00000040; }}

 [MAG continent-stateOver] {
   [TYPE place_country] NODE.TEXT {label: IName; style: emphasize; size: 2.2; priority: @labelPrioCounty; }
 }
 [MAG state-] { [TYPE place_country] NODE.TEXT { size: 3; color: #00000080; }}
 [MAG stateOver-] { [TYPE place_country] NODE.TEXT { size: 4; color: #00000060; }}

 [MAG state-county] {
   [TYPE place_state] NODE.TEXT {label: IName; style: emphasize; size: 1.7; scaleMag: state; priority: @labelPrioState; }
 }

// TODO: overlay
 [MAG region-city] {
   [TYPE place_region] NODE.TEXT {label: IName; style: emphasize;  priority: @labelPrioRegion;}
 }

// TODO: overlay
 [MAG county-city] {
   [TYPE place_county] NODE.TEXT {label: IName; style: emphasize; priority: @labelPrioCounty;}
 }

 [MAG stateOver-city] {
   [TYPE place_millioncity] NODE.TEXT {label: IName; style: emphasize; size: 1.5; priority: @labelPrioMillionCity; }
   [TYPE place_bigcity] NODE.TEXT {label: IName; style: emphasize; size: 1.4; priority: @labelPrioBigCity;}
 }

 [MAG proximity-city] {
   [TYPE place_millioncity] NODE.TEXT {size: 1.0; scaleMag: county;}
   [TYPE place_bigcity] NODE.TEXT {size: 1.0; scaleMag: county;}
   [TYPE place_city] NODE.TEXT {scaleMag: region;}
   [TYPE place_town] NODE.TEXT {label: IName; style: emphasize; size: 1.3; priority: @labelPrioTown;}
 }

 [MAG region-city] {
   [TYPE place_city] NODE.TEXT {label: IName; style: emphasize; size: 1.35; priority: @labelPrioCity; }
 }

 [MAG region-veryClose] {
   [TYPE place_island,
         place_islet] {
     NODE.TEXT {label: IName; style: emphasize; size: 1.3; priority: @labelPrioIsland;}
     AREA.TEXT { label: IName; style: emphasize; priority: @labelPrioIsland; autoSize: true; }
   }
 }
 [MAG region-] {
   [TYPE place_island,
         place_islet] {
     AREA {color: @landColor;}
   }
 }
 [MAG cityOver-veryClose] {
   [TYPE place_suburb] NODE.TEXT {label: IName; style: emphasize; size: 1.3; scaleMag: city; priority: @labelPrioSuburb;}
 }

 [MAG city-veryClose] {
   [TYPE place_village] NODE.TEXT {label: IName; style: emphasize; size: 1.2; priority: @labelPrioVillage;}
   [TYPE place_town] NODE.TEXT {scaleMag: region;}
   [TYPE place_hamlet] NODE.TEXT {label: IName; style: emphasize; size: 1.0; priority: @labelPrioHamlet;}
 }

 [MAG suburb-suburb] {
   [TYPE place_village] NODE.TEXT {scaleMag: suburb;}
 }

 [MAG close-] {
   [TYPE place_locality] NODE.TEXT {label: IName; style: emphasize; size: 1.1; priority: @labelPrioLocality;}
 }

 // -------------------------------------------------------
 //
 // Routes
 //

 [MAG close-] {
   [TYPE route_skiing_nordic] ROUTE {color: #1cb7ff; preferColorFeature: true; dash: 6,4; offsetRel: sidecar; displayWidth: 0.6mm; priority: -10; }
 }

END
